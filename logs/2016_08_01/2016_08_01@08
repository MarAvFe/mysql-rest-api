(08:22:20.173)[inf]: Initializing server on port 2828.
(08:22:24.520)[log]: in = {"int":"1","dec":"2.01","bool":"1"}
(08:22:24.520)[log]: out = {"error":"none","data":{"fieldCount":0,"affectedRows":1,"insertId":0,"serverStatus":2,"warningCount":4,"message":"","protocol41":true,"changedRows":0}}
(08:23:00.799)[log]: in = {}
(08:23:00.802)[log]: out = {"error":"none","data":[{"Db":"newTest","Name":"p_A_djent","Type":"PROCEDURE","Definer":"mlndz@localhost","Modified":"2016-09-16T03:56:01.000Z","Created":"2016-09-16T03:56:01.000Z","Security_type":"DEFINER","Comment":"","character_set_client":"latin1","collation_connection":"latin1_swedish_ci","Database Collation":"latin1_swedish_ci"},{"Db":"newTest","Name":"p_A_folk","Type":"PROCEDURE","Definer":"mlndz@localhost","Modified":"2016-09-16T04:17:45.000Z","Created":"2016-09-16T04:17:45.000Z","Security_type":"DEFINER","Comment":"","character_set_client":"latin1","collation_connection":"latin1_swedish_ci","Database Collation":"latin1_swedish_ci"},{"Db":"newTest","Name":"p_G_djent","Type":"PROCEDURE","Definer":"mlndz@localhost","Modified":"2016-09-16T03:54:31.000Z","Created":"2016-09-16T03:54:31.000Z","Security_type":"DEFINER","Comment":"","character_set_client":"latin1","collation_connection":"latin1_swedish_ci","Database Collation":"latin1_swedish_ci"},{"Db":"sys","Name":"create_synonym_db","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Takes a source database name and synonym name, and then creates the \n synonym database with views that point to all of the tables within\n the source database.\n \n Useful for creating a \"ps\" synonym for \"performance_schema\",\n or \"is\" instead of \"information_schema\", for example.\n \n Parameters\n \n in_db_name (VARCHAR(64)):\n The database name that you would like to create a synonym for.\n in_synonym (VARCHAR(64)):\n The database synonym name.\n \n Example\n \n mysql> SHOW DATABASES;\n +--------------------+\n | Database           |\n +--------------------+\n | information_schema |\n | mysql              |\n | performance_schema |\n | sys                |\n | test               |\n +--------------------+\n 5 rows in set (0.00 sec)\n \n mysql> CALL sys.create_synonym_db('performance_schema', 'ps');\n +-------------------------------------+\n | summary                             |\n +-------------------------------------+\n | Created 74 views in the ps database |\n +-------------------------------------+\n 1 row in set (8.57 sec)\n \n Query OK, 0 rows affected (8.57 sec)\n \n mysql> SHOW DATABASES;\n +--------------------+\n | Database           |\n +--------------------+\n | information_schema |\n | mysql              |\n | performance_schema |\n | ps                 |\n | sys                |\n | test               |\n +--------------------+\n 6 rows in set (0.00 sec)\n \n mysql> SHOW FULL TABLES FROM ps;\n +------------------------------------------------------+------------+\n | Tables_in_ps                                         | Table_type |\n +------------------------------------------------------+------------+\n | accounts                                             | VIEW       |\n | cond_instances                                       | VIEW       |\n | events_stages_current                                | VIEW       |\n | events_stages_history                                | VIEW       |\n ...\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"diagnostics","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Create a report of the current status of the server for diagnostics purposes. Data collected includes (some items depends on versions and settings):\n \n * The GLOBAL VARIABLES\n * Several sys schema views including metrics or equivalent (depending on version and settings)\n * Queries in the 95th percentile\n * Several ndbinfo views for MySQL Cluster\n * Replication (both master and slave) information.\n \n Some of the sys schema views are calculated as initial (optional), overall, delta:\n \n * The initial view is the content of the view at the start of this procedure.\n This output will be the same as the the start values used for the delta view.\n The initial view is included if @sys.diagnostics.include_raw = 'ON'.\n * The overall view is the content of the view at the end of this procedure.\n This output is the same as the end values used for the delta view.\n The overall view is always included.\n * The delta view is the difference from the beginning to the end. Note that for min and max values\n they are simply the min or max value from the end view respectively, so does not necessarily reflect\n the minimum/maximum value in the monitored period.\n Note: except for the metrics views the delta is only calculation between the first and last outputs.\n \n Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\n \n Versions supported:\n * MySQL 5.6: 5.6.10 and later\n * MySQL 5.7: 5.7.9 and later\n \n Parameters\n \n in_max_runtime (INT UNSIGNED):\n The maximum time to keep collecting data.\n Use NULL to get the default which is 60 seconds, otherwise enter a value greater than 0.\n in_interval (INT UNSIGNED):\n How long to sleep between data collections.\n Use NULL to get the default which is 30 seconds, otherwise enter a value greater than 0.\n in_auto_config (ENUM('current', 'medium', 'full'))\n Automatically enable Performance Schema instruments and consumers.\n NOTE: The more that are enabled, the more impact on the performance.\n Supported values are:\n * current - use the current settings.\n * medium - enable some settings. This requires the SUPER privilege.\n * full - enables all settings. This will have a big impact on the\n performance - be careful using this option. This requires\n the SUPER privilege.\n If another setting the 'current' is chosen, the current settings\n are restored at the end of the procedure.\n \n \n Configuration Options\n \n sys.diagnostics.allow_i_s_tables\n Specifies whether it is allowed to do table scan queries on information_schema.TABLES. This can be expensive if there\n are many tables. Set to 'ON' to allow, 'OFF' to not allow.\n Default is 'OFF'.\n \n sys.diagnostics.include_raw\n Set to 'ON' to include the raw data (e.g. the original output of \"SELECT * FROM sys.metrics\").\n Use this to get the initial values of the various views.\n Default is 'OFF'.\n \n sys.statement_truncate_len\n How much of queries in the process list output to include.\n Default is 64.\n \n sys.debug\n Whether to provide debugging output.\n Default is 'OFF'. Set to 'ON' to include.\n \n \n Example\n \n To create a report and append it to the file diag.out:\n \n mysql> TEE diag.out;\n mysql> CALL sys.diagnostics(120, 30, 'current');\n ...\n mysql> NOTEE;\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"execute_prepared_stmt","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Takes the query in the argument and executes it using a prepared statement. The prepared statement is deallocated,\n so the procedure is mainly useful for executing one off dynamically created queries.\n \n The sys_execute_prepared_stmt prepared statement name is used for the query and is required not to exist.\n \n \n Parameters\n \n in_query (longtext CHARACTER SET UTF8):\n The query to execute.\n \n \n Configuration Options\n \n sys.debug\n Whether to provide debugging output.\n Default is 'OFF'. Set to 'ON' to include.\n \n \n Example\n \n mysql> CALL sys.execute_prepared_stmt('SELECT * FROM sys.sys_config');\n +------------------------+-------+---------------------+--------+\n | variable               | value | set_time            | set_by |\n +------------------------+-------+---------------------+--------+\n | statement_truncate_len | 64    | 2015-06-30 13:06:00 | NULL   |\n +------------------------+-------+---------------------+--------+\n 1 row in set (0.00 sec)\n \n Query OK, 0 rows affected (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_disable_background_threads","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Disable all background thread instrumentation within Performance Schema.\n \n Parameters\n \n None.\n \n Example\n \n mysql> CALL sys.ps_setup_disable_background_threads();\n +--------------------------------+\n | summary                        |\n +--------------------------------+\n | Disabled 18 background threads |\n +--------------------------------+\n 1 row in set (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_disable_consumer","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Disables consumers within Performance Schema \n matching the input pattern.\n \n Parameters\n \n consumer (VARCHAR(128)):\n A LIKE pattern match (using \"%consumer%\") of consumers to disable\n \n Example\n \n To disable all consumers:\n \n mysql> CALL sys.ps_setup_disable_consumer('');\n +--------------------------+\n | summary                  |\n +--------------------------+\n | Disabled 15 consumers    |\n +--------------------------+\n 1 row in set (0.02 sec)\n \n To disable just the event_stage consumers:\n \n mysql> CALL sys.ps_setup_disable_comsumers('stage');\n +------------------------+\n | summary                |\n +------------------------+\n | Disabled 3 consumers   |\n +------------------------+\n 1 row in set (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_disable_instrument","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Disables instruments within Performance Schema \n matching the input pattern.\n \n Parameters\n \n in_pattern (VARCHAR(128)):\n A LIKE pattern match (using \"%in_pattern%\") of events to disable\n \n Example\n \n To disable all mutex instruments:\n \n mysql> CALL sys.ps_setup_disable_instrument('wait/synch/mutex');\n +--------------------------+\n | summary                  |\n +--------------------------+\n | Disabled 155 instruments |\n +--------------------------+\n 1 row in set (0.02 sec)\n \n To disable just a the scpecific TCP/IP based network IO instrument:\n \n mysql> CALL sys.ps_setup_disable_instrument('wait/io/socket/sql/server_tcpip_socket');\n +------------------------+\n | summary                |\n +------------------------+\n | Disabled 1 instruments |\n +------------------------+\n 1 row in set (0.00 sec)\n \n To enable all instruments:\n \n mysql> CALL sys.ps_setup_disable_instrument('');\n +--------------------------+\n | summary                  |\n +--------------------------+\n | Disabled 547 instruments |\n +--------------------------+\n 1 row in set (0.01 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_disable_thread","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Disable the given connection/thread in Performance Schema.\n \n Parameters\n \n in_connection_id (BIGINT):\n The connection ID (PROCESSLIST_ID from performance_schema.threads\n or the ID shown within SHOW PROCESSLIST)\n \n Example\n \n mysql> CALL sys.ps_setup_disable_thread(3);\n +-------------------+\n | summary           |\n +-------------------+\n | Disabled 1 thread |\n +-------------------+\n 1 row in set (0.01 sec)\n \n To disable the current connection:\n \n mysql> CALL sys.ps_setup_disable_thread(CONNECTION_ID());\n +-------------------+\n | summary           |\n +-------------------+\n | Disabled 1 thread |\n +-------------------+\n 1 row in set (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_enable_background_threads","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Enable all background thread instrumentation within Performance Schema.\n \n Parameters\n \n None.\n \n Example\n \n mysql> CALL sys.ps_setup_enable_background_threads();\n +-------------------------------+\n | summary                       |\n +-------------------------------+\n | Enabled 18 background threads |\n +-------------------------------+\n 1 row in set (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_enable_consumer","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Enables consumers within Performance Schema \n matching the input pattern.\n \n Parameters\n \n consumer (VARCHAR(128)):\n A LIKE pattern match (using \"%consumer%\") of consumers to enable\n \n Example\n \n To enable all consumers:\n \n mysql> CALL sys.ps_setup_enable_consumer('');\n +-------------------------+\n | summary                 |\n +-------------------------+\n | Enabled 10 consumers    |\n +-------------------------+\n 1 row in set (0.02 sec)\n \n Query OK, 0 rows affected (0.02 sec)\n \n To enable just \"waits\" consumers:\n \n mysql> CALL sys.ps_setup_enable_consumer('waits');\n +-----------------------+\n | summary               |\n +-----------------------+\n | Enabled 3 consumers   |\n +-----------------------+\n 1 row in set (0.00 sec)\n \n Query OK, 0 rows affected (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_enable_instrument","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Enables instruments within Performance Schema \n matching the input pattern.\n \n Parameters\n \n in_pattern (VARCHAR(128)):\n A LIKE pattern match (using \"%in_pattern%\") of events to enable\n \n Example\n \n To enable all mutex instruments:\n \n mysql> CALL sys.ps_setup_enable_instrument('wait/synch/mutex');\n +-------------------------+\n | summary                 |\n +-------------------------+\n | Enabled 155 instruments |\n +-------------------------+\n 1 row in set (0.02 sec)\n \n Query OK, 0 rows affected (0.02 sec)\n \n To enable just a the scpecific TCP/IP based network IO instrument:\n \n mysql> CALL sys.ps_setup_enable_instrument('wait/io/socket/sql/server_tcpip_socket');\n +-----------------------+\n | summary               |\n +-----------------------+\n | Enabled 1 instruments |\n +-----------------------+\n 1 row in set (0.00 sec)\n \n Query OK, 0 rows affected (0.00 sec)\n \n To enable all instruments:\n \n mysql> CALL sys.ps_setup_enable_instrument('');\n +-------------------------+\n | summary                 |\n +-------------------------+\n | Enabled 547 instruments |\n +-------------------------+\n 1 row in set (0.01 sec)\n \n Query OK, 0 rows affected (0.01 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_enable_thread","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Enable the given connection/thread in Performance Schema.\n \n Parameters\n \n in_connection_id (BIGINT):\n The connection ID (PROCESSLIST_ID from performance_schema.threads\n or the ID shown within SHOW PROCESSLIST)\n \n Example\n \n mysql> CALL sys.ps_setup_enable_thread(3);\n +------------------+\n | summary          |\n +------------------+\n | Enabled 1 thread |\n +------------------+\n 1 row in set (0.01 sec)\n \n To enable the current connection:\n \n mysql> CALL sys.ps_setup_enable_thread(CONNECTION_ID());\n +------------------+\n | summary          |\n +------------------+\n | Enabled 1 thread |\n +------------------+\n 1 row in set (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_reload_saved","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Reloads a saved Performance Schema configuration,\n so that you can alter the setup for debugging purposes, \n but restore it to a previous state.\n \n Use the companion procedure - ps_setup_save(), to \n save a configuration.\n \n Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\n \n Parameters\n \n None.\n \n Example\n \n mysql> CALL sys.ps_setup_save();\n Query OK, 0 rows affected (0.08 sec)\n \n mysql> UPDATE performance_schema.setup_instruments SET enabled = 'YES', timed = 'YES';\n Query OK, 547 rows affected (0.40 sec)\n Rows matched: 784  Changed: 547  Warnings: 0\n \n /* Run some tests that need more detailed instrumentation here */\n \n mysql> CALL sys.ps_setup_reload_saved();\n Query OK, 0 rows affected (0.32 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_reset_to_default","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Resets the Performance Schema setup to the default settings.\n \n Parameters\n \n in_verbose (BOOLEAN):\n Whether to print each setup stage (including the SQL) whilst running.\n \n Example\n \n mysql> CALL sys.ps_setup_reset_to_default(true)\\G\n *************************** 1. row ***************************\n status: Resetting: setup_actors\n DELETE\n FROM performance_schema.setup_actors\n WHERE NOT (HOST = '%' AND USER = '%' AND ROLE = '%')\n 1 row in set (0.00 sec)\n \n *************************** 1. row ***************************\n status: Resetting: setup_actors\n INSERT IGNORE INTO performance_schema.setup_actors\n VALUES ('%', '%', '%')\n 1 row in set (0.00 sec)\n ...\n \n mysql> CALL sys.ps_setup_reset_to_default(false)G\n Query OK, 0 rows affected (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_save","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Saves the current configuration of Performance Schema, \n so that you can alter the setup for debugging purposes, \n but restore it to a previous state.\n \n Use the companion procedure - ps_setup_reload_saved(), to \n restore the saved config.\n \n Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\n \n Parameters\n \n None.\n \n Example\n \n mysql> CALL sys.ps_setup_save();\n Query OK, 0 rows affected (0.08 sec)\n \n mysql> UPDATE performance_schema.setup_instruments \n ->    SET enabled = 'YES', timed = 'YES';\n Query OK, 547 rows affected (0.40 sec)\n Rows matched: 784  Changed: 547  Warnings: 0\n \n /* Run some tests that need more detailed instrumentation here */\n \n mysql> CALL sys.ps_setup_reload_saved();\n Query OK, 0 rows affected (0.32 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_show_disabled","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Shows all currently disable Performance Schema configuration.\n \n Parameters\n \n in_in_show_instruments (BOOLEAN):\n Whether to print disabled instruments (can print many items)\n \n in_in_show_threads (BOOLEAN):\n Whether to print disabled threads\n \n Example\n \n mysql> CALL sys.ps_setup_show_disabled(TRUE, TRUE);\n +----------------------------+\n | performance_schema_enabled |\n +----------------------------+\n |                          1 |\n +----------------------------+\n 1 row in set (0.00 sec)\n \n +--------------------+\n | enabled_users      |\n +--------------------+\n | 'mark'@'localhost' |\n +--------------------+\n 1 row in set (0.00 sec)\n \n +-------------+----------------------+---------+-------+\n | object_type | objects              | enabled | timed |\n +-------------+----------------------+---------+-------+\n | EVENT       | mysql.%              | NO      | NO    |\n | EVENT       | performance_schema.% | NO      | NO    |\n | EVENT       | information_schema.% | NO      | NO    |\n | FUNCTION    | mysql.%              | NO      | NO    |\n | FUNCTION    | performance_schema.% | NO      | NO    |\n | FUNCTION    | information_schema.% | NO      | NO    |\n | PROCEDURE   | mysql.%              | NO      | NO    |\n | PROCEDURE   | performance_schema.% | NO      | NO    |\n | PROCEDURE   | information_schema.% | NO      | NO    |\n | TABLE       | mysql.%              | NO      | NO    |\n | TABLE       | performance_schema.% | NO      | NO    |\n | TABLE       | information_schema.% | NO      | NO    |\n | TRIGGER     | mysql.%              | NO      | NO    |\n | TRIGGER     | performance_schema.% | NO      | NO    |\n | TRIGGER     | information_schema.% | NO      | NO    |\n +-------------+----------------------+---------+-------+\n 15 rows in set (0.00 sec)\n \n +----------------------------------+\n | disabled_consumers               |\n +----------------------------------+\n | events_stages_current            |\n | events_stages_history            |\n | events_stages_history_long       |\n | events_statements_history        |\n | events_statements_history_long   |\n | events_transactions_history      |\n | events_transactions_history_long |\n | events_waits_current             |\n | events_waits_history             |\n | events_waits_history_long        |\n +----------------------------------+\n 10 rows in set (0.00 sec)\n \n Empty set (0.00 sec)\n \n +---------------------------------------------------------------------------------------+-------+\n | disabled_instruments                                                                  | timed |\n +---------------------------------------------------------------------------------------+-------+\n | wait/synch/mutex/sql/TC_LOG_MMAP::LOCK_tc                                             | NO    |\n | wait/synch/mutex/sql/LOCK_des_key_file                                                | NO    |\n | wait/synch/mutex/sql/MYSQL_BIN_LOG::LOCK_commit                                       | NO    |\n ...\n | memory/sql/servers_cache                                                              | NO    |\n | memory/sql/udf_mem                                                                    | NO    |\n | wait/lock/metadata/sql/mdl                                                            | NO    |\n +---------------------------------------------------------------------------------------+-------+\n 547 rows in set (0.00 sec)\n \n Query OK, 0 rows affected (0.01 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_show_disabled_consumers","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Shows all currently disabled consumers.\n \n Parameters\n \n None\n \n Example\n \n mysql> CALL sys.ps_setup_show_disabled_consumers();\n \n +---------------------------+\n | disabled_consumers        |\n +---------------------------+\n | events_statements_current |\n | global_instrumentation    |\n | thread_instrumentation    |\n | statements_digest         |\n +---------------------------+\n 4 rows in set (0.05 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_show_disabled_instruments","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Shows all currently disabled instruments.\n \n Parameters\n \n None\n \n Example\n \n mysql> CALL sys.ps_setup_show_disabled_instruments();\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_show_enabled","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Shows all currently enabled Performance Schema configuration.\n \n Parameters\n \n in_show_instruments (BOOLEAN):\n Whether to print enabled instruments (can print many items)\n \n in_show_threads (BOOLEAN):\n Whether to print enabled threads\n \n Example\n \n mysql> CALL sys.ps_setup_show_enabled(TRUE, TRUE);\n +----------------------------+\n | performance_schema_enabled |\n +----------------------------+\n |                          1 |\n +----------------------------+\n 1 row in set (0.00 sec)\n \n +---------------+\n | enabled_users |\n +---------------+\n | '%'@'%'       |\n +---------------+\n 1 row in set (0.01 sec)\n \n +----------------------+---------+-------+\n | objects              | enabled | timed |\n +----------------------+---------+-------+\n | mysql.%              | NO      | NO    |\n | performance_schema.% | NO      | NO    |\n | information_schema.% | NO      | NO    |\n | %.%                  | YES     | YES   |\n +----------------------+---------+-------+\n 4 rows in set (0.01 sec)\n \n +---------------------------+\n | enabled_consumers         |\n +---------------------------+\n | events_statements_current |\n | global_instrumentation    |\n | thread_instrumentation    |\n | statements_digest         |\n +---------------------------+\n 4 rows in set (0.05 sec)\n \n +--------------------------+-------------+\n | enabled_threads          | thread_type |\n +--------------------------+-------------+\n | innodb/srv_master_thread | BACKGROUND  |\n | root@localhost           | FOREGROUND  |\n | root@localhost           | FOREGROUND  |\n | root@localhost           | FOREGROUND  |\n | root@localhost           | FOREGROUND  |\n +--------------------------+-------------+\n 5 rows in set (0.03 sec)\n \n +-------------------------------------+-------+\n | enabled_instruments                 | timed |\n +-------------------------------------+-------+\n | wait/io/file/sql/map                | YES   |\n | wait/io/file/sql/binlog             | YES   |\n ...\n | statement/com/Error                 | YES   |\n | statement/com/                      | YES   |\n | idle                                | YES   |\n +-------------------------------------+-------+\n 210 rows in set (0.08 sec)\n \n Query OK, 0 rows affected (0.89 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_show_enabled_consumers","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Shows all currently enabled consumers.\n \n Parameters\n \n None\n \n Example\n \n mysql> CALL sys.ps_setup_show_enabled_consumers();\n \n +---------------------------+\n | enabled_consumers         |\n +---------------------------+\n | events_statements_current |\n | global_instrumentation    |\n | thread_instrumentation    |\n | statements_digest         |\n +---------------------------+\n 4 rows in set (0.05 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_show_enabled_instruments","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Shows all currently enabled instruments.\n \n Parameters\n \n None\n \n Example\n \n mysql> CALL sys.ps_setup_show_enabled_instruments();\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_statement_avg_latency_histogram","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Outputs a textual histogram graph of the average latency values\n across all normalized queries tracked within the Performance Schema\n events_statements_summary_by_digest table.\n \n Can be used to show a very high level picture of what kind of \n latency distribution statements running within this instance have.\n \n Parameters\n \n None.\n \n Example\n \n mysql> CALL sys.ps_statement_avg_latency_histogram()G\n *************************** 1. row ***************************\n Performance Schema Statement Digest Average Latency Histogram:\n \n . = 1 unit\n * = 2 units\n # = 3 units\n \n (0 - 38ms)     240 | ################################################################################\n (38 - 77ms)    38  | ......................................\n (77 - 115ms)   3   | ...\n (115 - 154ms)  62  | *******************************\n (154 - 192ms)  3   | ...\n (192 - 231ms)  0   |\n (231 - 269ms)  0   |\n (269 - 307ms)  0   |\n (307 - 346ms)  0   |\n (346 - 384ms)  1   | .\n (384 - 423ms)  1   | .\n (423 - 461ms)  0   |\n (461 - 499ms)  0   |\n (499 - 538ms)  0   |\n (538 - 576ms)  0   |\n (576 - 615ms)  1   | .\n \n Total Statements: 350; Buckets: 16; Bucket Size: 38 ms;\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_trace_statement_digest","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Traces all instrumentation within Performance Schema for a specific\n Statement Digest. \n \n When finding a statement of interest within the \n performance_schema.events_statements_summary_by_digest table, feed\n the DIGEST MD5 value in to this procedure, set how long to poll for, \n and at what interval to poll, and it will generate a report of all \n statistics tracked within Performance Schema for that digest for the\n interval.\n \n It will also attempt to generate an EXPLAIN for the longest running \n example of the digest during the interval. Note this may fail, as\n Performance Schema truncates long SQL_TEXT values (and hence the \n EXPLAIN will fail due to parse errors).\n \n Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\n \n Parameters\n \n in_digest (VARCHAR(32)):\n The statement digest identifier you would like to analyze\n in_runtime (INT):\n The number of seconds to run analysis for (defaults to a minute)\n in_interval (DECIMAL(2,2)):\n The interval (in seconds, may be fractional) at which to try\n and take snapshots (defaults to a second)\n in_start_fresh (BOOLEAN):\n Whether to TRUNCATE the events_statements_history_long and\n events_stages_history_long tables before starting (default false)\n in_auto_enable (BOOLEAN):\n Whether to automatically turn on required consumers (default false)\n \n Example\n \n mysql> call ps_trace_statement_digest('891ec6860f98ba46d89dd20b0c03652c', 10, 0.1, true, true);\n +--------------------+\n | SUMMARY STATISTICS |\n +--------------------+\n | SUMMARY STATISTICS |\n +--------------------+\n 1 row in set (9.11 sec)\n \n +------------+-----------+-----------+-----------+---------------+------------+------------+\n | executions | exec_time | lock_time | rows_sent | rows_examined | tmp_tables | full_scans |\n +------------+-----------+-----------+-----------+---------------+------------+------------+\n |         21 | 4.11 ms   | 2.00 ms   |         0 |            21 |          0 |          0 |\n +------------+-----------+-----------+-----------+---------------+------------+------------+\n 1 row in set (9.11 sec)\n \n +------------------------------------------+-------+-----------+\n | event_name                               | count | latency   |\n +------------------------------------------+-------+-----------+\n | stage/sql/checking query cache for query |    16 | 724.37 us |\n | stage/sql/statistics                     |    16 | 546.92 us |\n | stage/sql/freeing items                  |    18 | 520.11 us |\n | stage/sql/init                           |    51 | 466.80 us |\n ...\n | stage/sql/cleaning up                    |    18 | 11.92 us  |\n | stage/sql/executing                      |    16 | 6.95 us   |\n +------------------------------------------+-------+-----------+\n 17 rows in set (9.12 sec)\n \n +---------------------------+\n | LONGEST RUNNING STATEMENT |\n +---------------------------+\n | LONGEST RUNNING STATEMENT |\n +---------------------------+\n 1 row in set (9.16 sec)\n \n +-----------+-----------+-----------+-----------+---------------+------------+-----------+\n | thread_id | exec_time | lock_time | rows_sent | rows_examined | tmp_tables | full_scan |\n +-----------+-----------+-----------+-----------+---------------+------------+-----------+\n |    166646 | 618.43 us | 1.00 ms   |         0 |             1 |          0 |         0 |\n +-----------+-----------+-----------+-----------+---------------+------------+-----------+\n 1 row in set (9.16 sec)\n \n // Truncated for clarity...\n +-----------------------------------------------------------------+\n | sql_text                                                        |\n +-----------------------------------------------------------------+\n | select hibeventhe0_.id as id1382_, hibeventhe0_.createdTime ... |\n +-----------------------------------------------------------------+\n 1 row in set (9.17 sec)\n \n +------------------------------------------+-----------+\n | event_name                               | latency   |\n +------------------------------------------+-----------+\n | stage/sql/init                           | 8.61 us   |\n | stage/sql/Waiting for query cache lock   | 453.23 us |\n | stage/sql/init                           | 331.07 ns |\n | stage/sql/checking query cache for query | 43.04 us  |\n ...\n | stage/sql/freeing items                  | 30.46 us  |\n | stage/sql/cleaning up                    | 662.13 ns |\n +------------------------------------------+-----------+\n 18 rows in set (9.23 sec)\n \n +----+-------------+--------------+-------+---------------+-----------+---------+-------------+------+-------+\n | id | select_type | table        | type  | possible_keys | key       | key_len | ref         | rows | Extra |\n +----+-------------+--------------+-------+---------------+-----------+---------+-------------+------+-------+\n |  1 | SIMPLE      | hibeventhe0_ | const | fixedTime     | fixedTime | 775     | const,const |    1 | NULL  |\n +----+-------------+--------------+-------+---------------+-----------+---------+-------------+------+-------+\n 1 row in set (9.27 sec)\n \n Query OK, 0 rows affected (9.28 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_trace_thread","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Dumps all data within Performance Schema for an instrumented thread,\n to create a DOT formatted graph file. \n \n Each resultset returned from the procedure should be used for a complete graph\n \n Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\n \n Parameters\n \n in_thread_id (BIGINT UNSIGNED):\n The thread that you would like a stack trace for\n in_outfile  (VARCHAR(255)):\n The filename the dot file will be written to\n in_max_runtime (DECIMAL(20,2)):\n The maximum time to keep collecting data.\n Use NULL to get the default which is 60 seconds.\n in_interval (DECIMAL(20,2)): \n How long to sleep between data collections. \n Use NULL to get the default which is 1 second.\n in_start_fresh (BOOLEAN):\n Whether to reset all Performance Schema data before tracing.\n in_auto_setup (BOOLEAN):\n Whether to disable all other threads and enable all consumers/instruments. \n This will also reset the settings at the end of the run.\n in_debug (BOOLEAN):\n Whether you would like to include file:lineno in the graph\n \n Example\n \n mysql> CALL sys.ps_trace_thread(25, CONCAT('/tmp/stack-', REPLACE(NOW(), ' ', '-'), '.dot'), NULL, NULL, TRUE, TRUE, TRUE);\n +-------------------+\n | summary           |\n +-------------------+\n | Disabled 1 thread |\n +-------------------+\n 1 row in set (0.00 sec)\n \n +---------------------------------------------+\n | Info                                        |\n +---------------------------------------------+\n | Data collection starting for THREAD_ID = 25 |\n +---------------------------------------------+\n 1 row in set (0.03 sec)\n \n +-----------------------------------------------------------+\n | Info                                                      |\n +-----------------------------------------------------------+\n | Stack trace written to /tmp/stack-2014-02-16-21:18:41.dot |\n +-----------------------------------------------------------+\n 1 row in set (60.07 sec)\n \n +-------------------------------------------------------------------+\n | Convert to PDF                                                    |\n +-------------------------------------------------------------------+\n | dot -Tpdf -o /tmp/stack_25.pdf /tmp/stack-2014-02-16-21:18:41.dot |\n +-------------------------------------------------------------------+\n 1 row in set (60.07 sec)\n \n +-------------------------------------------------------------------+\n | Convert to PNG                                                    |\n +-------------------------------------------------------------------+\n | dot -Tpng -o /tmp/stack_25.png /tmp/stack-2014-02-16-21:18:41.dot |\n +-------------------------------------------------------------------+\n 1 row in set (60.07 sec)\n \n +------------------+\n | summary          |\n +------------------+\n | Enabled 1 thread |\n +------------------+\n 1 row in set (60.32 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_truncate_all_tables","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Truncates all summary tables within Performance Schema, \n resetting all aggregated instrumentation as a snapshot.\n \n Parameters\n \n in_verbose (BOOLEAN):\n Whether to print each TRUNCATE statement before running\n \n Example\n \n mysql> CALL sys.ps_truncate_all_tables(false);\n +---------------------+\n | summary             |\n +---------------------+\n | Truncated 44 tables |\n +---------------------+\n 1 row in set (0.10 sec)\n \n Query OK, 0 rows affected (0.10 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"statement_performance_analyzer","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Create a report of the statements running on the server.\n \n The views are calculated based on the overall and/or delta activity.\n \n Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\n \n Parameters\n \n in_action (ENUM('snapshot', 'overall', 'delta', 'create_tmp', 'create_table', 'save', 'cleanup')):\n The action to take. Supported actions are:\n * snapshot      Store a snapshot. The default is to make a snapshot of the current content of\n performance_schema.events_statements_summary_by_digest, but by setting in_table\n this can be overwritten to copy the content of the specified table.\n The snapshot is stored in the sys.tmp_digests temporary table.\n * overall       Generate analyzis based on the content specified by in_table. For the overall analyzis,\n in_table can be NOW() to use a fresh snapshot. This will overwrite an existing snapshot.\n Use NULL for in_table to use the existing snapshot. If in_table IS NULL and no snapshot\n exists, a new will be created.\n See also in_views and @sys.statement_performance_analyzer.limit.\n * delta         Generate a delta analysis. The delta will be calculated between the reference table in\n in_table and the snapshot. An existing snapshot must exist.\n The action uses the sys.tmp_digests_delta temporary table.\n See also in_views and @sys.statement_performance_analyzer.limit.\n * create_table  Create a regular table suitable for storing the snapshot for later use, e.g. for\n calculating deltas.\n * create_tmp    Create a temporary table suitable for storing the snapshot for later use, e.g. for\n calculating deltas.\n * save          Save the snapshot in the table specified by in_table. The table must exists and have\n the correct structure.\n If no snapshot exists, a new is created.\n * cleanup       Remove the temporary tables used for the snapshot and delta.\n \n in_table (VARCHAR(129)):\n The table argument used for some actions. Use the format 'db1.t1' or 't1' without using any backticks (`)\n for quoting. Periods (.) are not supported in the database and table names.\n \n The meaning of the table for each action supporting the argument is:\n \n * snapshot      The snapshot is created based on the specified table. Set to NULL or NOW() to use\n the current content of performance_schema.events_statements_summary_by_digest.\n * overall       The table with the content to create the overall analyzis for. The following values\n can be used:\n - A table name - use the content of that table.\n - NOW()        - create a fresh snapshot and overwrite the existing snapshot.\n - NULL         - use the last stored snapshot.\n * delta         The table name is mandatory and specified the reference view to compare the currently\n stored snapshot against. If no snapshot exists, a new will be created.\n * create_table  The name of the regular table to create.\n * create_tmp    The name of the temporary table to create.\n * save          The name of the table to save the currently stored snapshot into.\n \n in_views (SET ('with_runtimes_in_95th_percentile', 'analysis', 'with_errors_or_warnings',\n 'with_full_table_scans', 'with_sorting', 'with_temp_tables', 'custom'))\n Which views to include:  * with_runtimes_in_95th_percentile  Based on the sys.statements_with_runtimes_in_95th_percentile view * analysis                          Based on the sys.statement_analysis view * with_errors_or_warnings           Based on the sys.statements_with_errors_or_warnings view * with_full_table_scans             Based on the sys.statements_with_full_table_scans view * with_sorting                      Based on the sys.statements_with_sorting view * with_temp_tables                  Based on the sys.statements_with_temp_tables view * custom                            Use a custom view. This view must be specified in @sys.statement_performance_analyzer.view to an existing view or a query  Default is to include all except 'custom'.   Configuration Options  sys.statement_performance_analyzer.limit The maximum number of rows to include for the views that does not have a built-in limit (e.g. the 95th percentile view). If not set the limit is 100.  sys.statement_performance_analyzer.view Used together with the 'custom' view. If the value contains a space, it is considered a query, otherwise it must be an existing view querying the performance_schema.events_statements_summary_by_digest table. There cannot be any limit clause including in the query or view definition if @sys.statement_performance_analyzer.limit > 0. If specifying a view, use the same format as for in_table.  sys.debug Whether to provide debugging output. Default is 'OFF'. Set to 'ON' to include.   Example  To create a report with the queries in the 95th percentile since last truncate of performance_schema.events_statements_summary_by_digest and the delta for a 1 minute period:  1. Create a temporary table to store the initial snapshot. 2. Create the initial snapshot. 3. Save the initial snapshot in the temporary table. 4. Wait one minute. 5. Create a new snapshot. 6. Perform analyzis based on the new snapshot. 7. Perform analyzis based on the delta between the initial and new snapshots.  mysql> CALL sys.statement_performance_analyzer('create_tmp', 'mydb.tmp_digests_ini', NULL); Query OK, 0 rows affected (0.08 sec)  mysql> CALL sys.statement_performance_analyzer('snapshot', NULL, NULL); Query OK, 0 rows affected (0.02 sec)  mysql> CALL sys.statement_performance_analyzer('save', 'mydb.tmp_digests_ini', NULL); Query OK, 0 rows affected (0.00 sec)  mysql> DO SLEEP(60); Query OK, 0 rows affected (1 min 0.00 sec)  mysql> CALL sys.statement_performance_analyzer('snapshot', NULL, NULL); Query OK, 0 rows affected (0.02 sec)  mysql> CALL sys.statement_performance_analyzer('overall', NULL, 'with_runtimes_in_95th_percentile'); +-----------------------------------------+ | Next Output                             | +-----------------------------------------+ | Queries with Runtime in 95th Percentile | +-----------------------------------------+ 1 row in set (0.05 sec)  ...  mysql> CALL sys.statement_performance_analyzer('delta', 'mydb.tmp_digests_ini', 'with_runtimes_in_95th_percentile'); +-----------------------------------------+ | Next Output                             | +-----------------------------------------+ | Queries with Runtime in 95th Percentile | +-----------------------------------------+ 1 row in set (0.03 sec)  ...   To create an overall report of the 95th percentile queries and the top 10 queries with full table scans:  mysql> CALL sys.statement_performance_analyzer('snapshot', NULL, NULL); Query OK, 0 rows affected (0.01 sec)                                     mysql> SET @sys.statement_performance_analyzer.limit = 10; Query OK, 0 rows affected (0.00 sec)            mysql> CALL sys.statement_performance_analyzer('overall', NULL, 'with_runtimes_in_95th_percentile,with_full_table_scans'); +-----------------------------------------+ | Next Output                             | +-----------------------------------------+ | Queries with Runtime in 95th Percentile | +-----------------------------------------+ 1 row in set (0.01 sec)  ...  +-------------------------------------+ | Next Output                         | +-------------------------------------+ | Top 10 Queries with Full Table Scan | +-------------------------------------+ 1 row in set (0.09 sec)  ...   Use a custom view showing the top 10 query sorted by total execution time refreshing the view every minute using the watch command in Linux.  mysql> CREATE OR REPLACE VIEW mydb.my_statements AS -> SELECT sys.format_statement(DIGEST_TEXT) AS query, ->        SCHEMA_NAME AS db, ->        COUNT_STAR AS exec_count, ->        sys.format_time(SUM_TIMER_WAIT) AS total_latency, ->        sys.format_time(AVG_TIMER_WAIT) AS avg_latency, ->        ROUND(IFNULL(SUM_ROWS_SENT / NULLIF(COUNT_STAR, 0), 0)) AS rows_sent_avg, ->        ROUND(IFNULL(SUM_ROWS_EXAMINED / NULLIF(COUNT_STAR, 0), 0)) AS rows_examined_avg, ->        ROUND(IFNULL(SUM_ROWS_AFFECTED / NULLIF(COUNT_STAR, 0), 0)) AS rows_affected_avg, ->        DIGEST AS digest ->   FROM performance_schema.events_statements_summary_by_digest -> ORDER BY SUM_TIMER_WAIT DESC; Query OK, 0 rows affected (0.01 sec)  mysql> CALL sys.statement_performance_analyzer('create_table', 'mydb.digests_prev', NULL); Query OK, 0 rows affected (0.10 sec)  shell$ watch -n 60 \"mysql sys --table -e \" > SET @sys.statement_performance_analyzer.view = 'mydb.my_statements'; > SET @sys.statement_performance_analyzer.limit = 10; > CALL statement_performance_analyzer('snapshot', NULL, NULL); > CALL statement_performance_analyzer('delta', 'mydb.digests_prev', 'custom'); > CALL statement_performance_analyzer('save', 'mydb.digests_prev', NULL); > \"\"  Every 60.0s: mysql sys --table -e \"                                                                                                   ...  Mon Dec 22 10:58:51 2014  +----------------------------------+ | Next Output                      | +----------------------------------+ | Top 10 Queries Using Custom View | +----------------------------------+ +-------------------+-------+------------+---------------+-------------+---------------+-------------------+-------------------+----------------------------------+ | query             | db    | exec_count | total_latency | avg_latency | rows_sent_avg | rows_examined_avg | rows_affected_avg | digest                           | +-------------------+-------+------------+---------------+-------------+---------------+-------------------+-------------------+----------------------------------+ ... ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"table_exists","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Tests whether the table specified in in_db and in_table exists either as a regular\n table, or as a temporary table. The returned value corresponds to the table that\n will be used, so if there's both a temporary and a permanent table with the given\n name, then 'TEMPORARY' will be returned.\n \n Parameters\n \n in_db (VARCHAR(64)):\n The database name to check for the existance of the table in.\n \n in_table (VARCHAR(64)):\n The name of the table to check the existance of.\n \n out_exists ENUM('', 'BASE TABLE', 'VIEW', 'TEMPORARY'):\n The return value: whether the table exists. The value is one of:\n * ''           - the table does not exist neither as a base table, view, nor temporary table.\n * 'BASE TABLE' - the table name exists as a permanent base table table.\n * 'VIEW'       - the table name exists as a view.\n * 'TEMPORARY'  - the table name exists as a temporary table.\n \n Example\n \n mysql> CREATE DATABASE db1;\n Query OK, 1 row affected (0.07 sec)\n \n mysql> use db1;\n Database changed\n mysql> CREATE TABLE t1 (id INT PRIMARY KEY);\n Query OK, 0 rows affected (0.08 sec)\n \n mysql> CREATE TABLE t2 (id INT PRIMARY KEY);\n Query OK, 0 rows affected (0.08 sec)\n \n mysql> CREATE view v_t1 AS SELECT * FROM t1;\n Query OK, 0 rows affected (0.00 sec)\n \n mysql> CREATE TEMPORARY TABLE t1 (id INT PRIMARY KEY);\n Query OK, 0 rows affected (0.00 sec)\n \n mysql> CALL sys.table_exists('db1', 't1', @exists); SELECT @exists;\n Query OK, 0 rows affected (0.00 sec)\n \n +------------+\n | @exists    |\n +------------+\n | TEMPORARY  |\n +------------+\n 1 row in set (0.00 sec)\n \n mysql> CALL sys.table_exists('db1', 't2', @exists); SELECT @exists;\n Query OK, 0 rows affected (0.00 sec)\n \n +------------+\n | @exists    |\n +------------+\n | BASE TABLE |\n +------------+\n 1 row in set (0.01 sec)\n \n mysql> CALL sys.table_exists('db1', 'v_t1', @exists); SELECT @exists;\n Query OK, 0 rows affected (0.00 sec)\n \n +---------+\n | @exists |\n +---------+\n | VIEW    |\n +---------+\n 1 row in set (0.00 sec)\n \n mysql> CALL sys.table_exists('db1', 't3', @exists); SELECT @exists;\n Query OK, 0 rows affected (0.01 sec)\n \n +---------+\n | @exists |\n +---------+\n |         |\n +---------+\n 1 row in set (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"}]}
(08:23:00.814)[log]: [ 'p_A_djent',
  'p_A_folk',
  'p_G_djent',
  'create_synonym_db',
  'diagnostics',
  'execute_prepared_stmt',
  'ps_setup_disable_background_threads',
  'ps_setup_disable_consumer',
  'ps_setup_disable_instrument',
  'ps_setup_disable_thread',
  'ps_setup_enable_background_threads',
  'ps_setup_enable_consumer',
  'ps_setup_enable_instrument',
  'ps_setup_enable_thread',
  'ps_setup_reload_saved',
  'ps_setup_reset_to_default',
  'ps_setup_save',
  'ps_setup_show_disabled',
  'ps_setup_show_disabled_consumers',
  'ps_setup_show_disabled_instruments',
  'ps_setup_show_enabled',
  'ps_setup_show_enabled_consumers',
  'ps_setup_show_enabled_instruments',
  'ps_statement_avg_latency_histogram',
  'ps_trace_statement_digest',
  'ps_trace_thread',
  'ps_truncate_all_tables',
  'statement_performance_analyzer',
  'table_exists' ]
(08:23:00.823)[log]: in = {}
(08:23:00.823)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'p_A_djent' at line 1
(08:23:00.823)[log]: undefined
(08:23:00.835)[log]: in = {}
(08:23:00.836)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'p_A_folk' at line 1
(08:23:00.836)[log]: undefined
(08:23:00.836)[log]: in = {}
(08:23:00.836)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'p_G_djent' at line 1
(08:23:00.836)[log]: undefined
(08:23:00.837)[log]: in = {}
(08:23:00.837)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'create_synonym_db' at line 1
(08:23:00.837)[log]: undefined
(08:23:00.837)[log]: in = {}
(08:23:00.838)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'diagnostics' at line 1
(08:23:00.838)[log]: undefined
(08:23:00.838)[log]: in = {}
(08:23:00.838)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'execute_prepared_stmt' at line 1
(08:23:00.838)[log]: undefined
(08:23:00.839)[log]: in = {}
(08:23:00.839)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_disable_background_threads' at line 1
(08:23:00.839)[log]: undefined
(08:23:00.844)[log]: in = {}
(08:23:00.844)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_enable_consumer' at line 1
(08:23:00.845)[log]: undefined
(08:23:00.846)[log]: in = {}
(08:23:00.846)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_enable_background_threads' at line 1
(08:23:00.846)[log]: undefined
(08:23:00.846)[log]: in = {}
(08:23:00.846)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_disable_thread' at line 1
(08:23:00.848)[log]: undefined
(08:23:00.848)[log]: in = {}
(08:23:00.849)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_show_enabled_consumers' at line 1
(08:23:00.849)[log]: undefined
(08:23:00.849)[log]: in = {}
(08:23:00.850)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_show_disabled_instruments' at line 1
(08:23:00.850)[log]: undefined
(08:23:00.850)[log]: in = {}
(08:23:00.850)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_enable_instrument' at line 1
(08:23:00.850)[log]: undefined
(08:23:00.851)[log]: in = {}
(08:23:00.851)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_reload_saved' at line 1
(08:23:00.851)[log]: undefined
(08:23:00.852)[log]: in = {}
(08:23:00.852)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_show_disabled' at line 1
(08:23:00.852)[log]: undefined
(08:23:00.853)[log]: in = {}
(08:23:00.853)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_reset_to_default' at line 1
(08:23:00.853)[log]: undefined
(08:23:00.853)[log]: in = {}
(08:23:00.853)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_enable_thread' at line 1
(08:23:00.853)[log]: undefined
(08:23:00.854)[log]: in = {}
(08:23:00.854)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_save' at line 1
(08:23:00.854)[log]: undefined
(08:23:00.855)[log]: in = {}
(08:23:00.855)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_show_enabled_instruments' at line 1
(08:23:00.855)[log]: undefined
(08:23:00.855)[log]: in = {}
(08:23:00.856)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_show_enabled' at line 1
(08:23:00.856)[log]: undefined
(08:23:00.856)[log]: in = {}
(08:23:00.856)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_statement_avg_latency_histogram' at line 1
(08:23:00.856)[log]: undefined
(08:23:00.857)[log]: in = {}
(08:23:00.857)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_trace_thread' at line 1
(08:23:00.857)[log]: undefined
(08:23:00.858)[log]: in = {}
(08:23:00.858)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_show_disabled_consumers' at line 1
(08:23:00.858)[log]: undefined
(08:23:00.858)[log]: in = {}
(08:23:00.858)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_disable_instrument' at line 1
(08:23:00.858)[log]: undefined
(08:23:00.859)[log]: in = {}
(08:23:00.859)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_truncate_all_tables' at line 1
(08:23:00.859)[log]: undefined
(08:23:00.859)[log]: in = {}
(08:23:00.859)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'table_exists' at line 1
(08:23:00.860)[log]: undefined
(08:23:00.860)[log]: in = {}
(08:23:00.860)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'statement_performance_analyzer' at line 1
(08:23:00.860)[log]: undefined
(08:23:00.862)[log]: in = {}
(08:23:00.862)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_trace_statement_digest' at line 1
(08:23:00.862)[log]: undefined
(08:23:00.863)[log]: in = {}
(08:23:00.864)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_disable_consumer' at line 1
(08:23:00.864)[log]: undefined
(08:25:00.838)[log]: in = {}
(08:25:00.839)[log]: out = {"error":"none","data":[{"Db":"newTest","Name":"p_A_djent","Type":"PROCEDURE","Definer":"mlndz@localhost","Modified":"2016-09-16T03:56:01.000Z","Created":"2016-09-16T03:56:01.000Z","Security_type":"DEFINER","Comment":"","character_set_client":"latin1","collation_connection":"latin1_swedish_ci","Database Collation":"latin1_swedish_ci"},{"Db":"newTest","Name":"p_A_folk","Type":"PROCEDURE","Definer":"mlndz@localhost","Modified":"2016-09-16T04:17:45.000Z","Created":"2016-09-16T04:17:45.000Z","Security_type":"DEFINER","Comment":"","character_set_client":"latin1","collation_connection":"latin1_swedish_ci","Database Collation":"latin1_swedish_ci"},{"Db":"newTest","Name":"p_G_djent","Type":"PROCEDURE","Definer":"mlndz@localhost","Modified":"2016-09-16T03:54:31.000Z","Created":"2016-09-16T03:54:31.000Z","Security_type":"DEFINER","Comment":"","character_set_client":"latin1","collation_connection":"latin1_swedish_ci","Database Collation":"latin1_swedish_ci"},{"Db":"sys","Name":"create_synonym_db","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Takes a source database name and synonym name, and then creates the \n synonym database with views that point to all of the tables within\n the source database.\n \n Useful for creating a \"ps\" synonym for \"performance_schema\",\n or \"is\" instead of \"information_schema\", for example.\n \n Parameters\n \n in_db_name (VARCHAR(64)):\n The database name that you would like to create a synonym for.\n in_synonym (VARCHAR(64)):\n The database synonym name.\n \n Example\n \n mysql> SHOW DATABASES;\n +--------------------+\n | Database           |\n +--------------------+\n | information_schema |\n | mysql              |\n | performance_schema |\n | sys                |\n | test               |\n +--------------------+\n 5 rows in set (0.00 sec)\n \n mysql> CALL sys.create_synonym_db('performance_schema', 'ps');\n +-------------------------------------+\n | summary                             |\n +-------------------------------------+\n | Created 74 views in the ps database |\n +-------------------------------------+\n 1 row in set (8.57 sec)\n \n Query OK, 0 rows affected (8.57 sec)\n \n mysql> SHOW DATABASES;\n +--------------------+\n | Database           |\n +--------------------+\n | information_schema |\n | mysql              |\n | performance_schema |\n | ps                 |\n | sys                |\n | test               |\n +--------------------+\n 6 rows in set (0.00 sec)\n \n mysql> SHOW FULL TABLES FROM ps;\n +------------------------------------------------------+------------+\n | Tables_in_ps                                         | Table_type |\n +------------------------------------------------------+------------+\n | accounts                                             | VIEW       |\n | cond_instances                                       | VIEW       |\n | events_stages_current                                | VIEW       |\n | events_stages_history                                | VIEW       |\n ...\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"diagnostics","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Create a report of the current status of the server for diagnostics purposes. Data collected includes (some items depends on versions and settings):\n \n * The GLOBAL VARIABLES\n * Several sys schema views including metrics or equivalent (depending on version and settings)\n * Queries in the 95th percentile\n * Several ndbinfo views for MySQL Cluster\n * Replication (both master and slave) information.\n \n Some of the sys schema views are calculated as initial (optional), overall, delta:\n \n * The initial view is the content of the view at the start of this procedure.\n This output will be the same as the the start values used for the delta view.\n The initial view is included if @sys.diagnostics.include_raw = 'ON'.\n * The overall view is the content of the view at the end of this procedure.\n This output is the same as the end values used for the delta view.\n The overall view is always included.\n * The delta view is the difference from the beginning to the end. Note that for min and max values\n they are simply the min or max value from the end view respectively, so does not necessarily reflect\n the minimum/maximum value in the monitored period.\n Note: except for the metrics views the delta is only calculation between the first and last outputs.\n \n Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\n \n Versions supported:\n * MySQL 5.6: 5.6.10 and later\n * MySQL 5.7: 5.7.9 and later\n \n Parameters\n \n in_max_runtime (INT UNSIGNED):\n The maximum time to keep collecting data.\n Use NULL to get the default which is 60 seconds, otherwise enter a value greater than 0.\n in_interval (INT UNSIGNED):\n How long to sleep between data collections.\n Use NULL to get the default which is 30 seconds, otherwise enter a value greater than 0.\n in_auto_config (ENUM('current', 'medium', 'full'))\n Automatically enable Performance Schema instruments and consumers.\n NOTE: The more that are enabled, the more impact on the performance.\n Supported values are:\n * current - use the current settings.\n * medium - enable some settings. This requires the SUPER privilege.\n * full - enables all settings. This will have a big impact on the\n performance - be careful using this option. This requires\n the SUPER privilege.\n If another setting the 'current' is chosen, the current settings\n are restored at the end of the procedure.\n \n \n Configuration Options\n \n sys.diagnostics.allow_i_s_tables\n Specifies whether it is allowed to do table scan queries on information_schema.TABLES. This can be expensive if there\n are many tables. Set to 'ON' to allow, 'OFF' to not allow.\n Default is 'OFF'.\n \n sys.diagnostics.include_raw\n Set to 'ON' to include the raw data (e.g. the original output of \"SELECT * FROM sys.metrics\").\n Use this to get the initial values of the various views.\n Default is 'OFF'.\n \n sys.statement_truncate_len\n How much of queries in the process list output to include.\n Default is 64.\n \n sys.debug\n Whether to provide debugging output.\n Default is 'OFF'. Set to 'ON' to include.\n \n \n Example\n \n To create a report and append it to the file diag.out:\n \n mysql> TEE diag.out;\n mysql> CALL sys.diagnostics(120, 30, 'current');\n ...\n mysql> NOTEE;\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"execute_prepared_stmt","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Takes the query in the argument and executes it using a prepared statement. The prepared statement is deallocated,\n so the procedure is mainly useful for executing one off dynamically created queries.\n \n The sys_execute_prepared_stmt prepared statement name is used for the query and is required not to exist.\n \n \n Parameters\n \n in_query (longtext CHARACTER SET UTF8):\n The query to execute.\n \n \n Configuration Options\n \n sys.debug\n Whether to provide debugging output.\n Default is 'OFF'. Set to 'ON' to include.\n \n \n Example\n \n mysql> CALL sys.execute_prepared_stmt('SELECT * FROM sys.sys_config');\n +------------------------+-------+---------------------+--------+\n | variable               | value | set_time            | set_by |\n +------------------------+-------+---------------------+--------+\n | statement_truncate_len | 64    | 2015-06-30 13:06:00 | NULL   |\n +------------------------+-------+---------------------+--------+\n 1 row in set (0.00 sec)\n \n Query OK, 0 rows affected (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_disable_background_threads","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Disable all background thread instrumentation within Performance Schema.\n \n Parameters\n \n None.\n \n Example\n \n mysql> CALL sys.ps_setup_disable_background_threads();\n +--------------------------------+\n | summary                        |\n +--------------------------------+\n | Disabled 18 background threads |\n +--------------------------------+\n 1 row in set (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_disable_consumer","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Disables consumers within Performance Schema \n matching the input pattern.\n \n Parameters\n \n consumer (VARCHAR(128)):\n A LIKE pattern match (using \"%consumer%\") of consumers to disable\n \n Example\n \n To disable all consumers:\n \n mysql> CALL sys.ps_setup_disable_consumer('');\n +--------------------------+\n | summary                  |\n +--------------------------+\n | Disabled 15 consumers    |\n +--------------------------+\n 1 row in set (0.02 sec)\n \n To disable just the event_stage consumers:\n \n mysql> CALL sys.ps_setup_disable_comsumers('stage');\n +------------------------+\n | summary                |\n +------------------------+\n | Disabled 3 consumers   |\n +------------------------+\n 1 row in set (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_disable_instrument","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Disables instruments within Performance Schema \n matching the input pattern.\n \n Parameters\n \n in_pattern (VARCHAR(128)):\n A LIKE pattern match (using \"%in_pattern%\") of events to disable\n \n Example\n \n To disable all mutex instruments:\n \n mysql> CALL sys.ps_setup_disable_instrument('wait/synch/mutex');\n +--------------------------+\n | summary                  |\n +--------------------------+\n | Disabled 155 instruments |\n +--------------------------+\n 1 row in set (0.02 sec)\n \n To disable just a the scpecific TCP/IP based network IO instrument:\n \n mysql> CALL sys.ps_setup_disable_instrument('wait/io/socket/sql/server_tcpip_socket');\n +------------------------+\n | summary                |\n +------------------------+\n | Disabled 1 instruments |\n +------------------------+\n 1 row in set (0.00 sec)\n \n To enable all instruments:\n \n mysql> CALL sys.ps_setup_disable_instrument('');\n +--------------------------+\n | summary                  |\n +--------------------------+\n | Disabled 547 instruments |\n +--------------------------+\n 1 row in set (0.01 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_disable_thread","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Disable the given connection/thread in Performance Schema.\n \n Parameters\n \n in_connection_id (BIGINT):\n The connection ID (PROCESSLIST_ID from performance_schema.threads\n or the ID shown within SHOW PROCESSLIST)\n \n Example\n \n mysql> CALL sys.ps_setup_disable_thread(3);\n +-------------------+\n | summary           |\n +-------------------+\n | Disabled 1 thread |\n +-------------------+\n 1 row in set (0.01 sec)\n \n To disable the current connection:\n \n mysql> CALL sys.ps_setup_disable_thread(CONNECTION_ID());\n +-------------------+\n | summary           |\n +-------------------+\n | Disabled 1 thread |\n +-------------------+\n 1 row in set (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_enable_background_threads","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Enable all background thread instrumentation within Performance Schema.\n \n Parameters\n \n None.\n \n Example\n \n mysql> CALL sys.ps_setup_enable_background_threads();\n +-------------------------------+\n | summary                       |\n +-------------------------------+\n | Enabled 18 background threads |\n +-------------------------------+\n 1 row in set (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_enable_consumer","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Enables consumers within Performance Schema \n matching the input pattern.\n \n Parameters\n \n consumer (VARCHAR(128)):\n A LIKE pattern match (using \"%consumer%\") of consumers to enable\n \n Example\n \n To enable all consumers:\n \n mysql> CALL sys.ps_setup_enable_consumer('');\n +-------------------------+\n | summary                 |\n +-------------------------+\n | Enabled 10 consumers    |\n +-------------------------+\n 1 row in set (0.02 sec)\n \n Query OK, 0 rows affected (0.02 sec)\n \n To enable just \"waits\" consumers:\n \n mysql> CALL sys.ps_setup_enable_consumer('waits');\n +-----------------------+\n | summary               |\n +-----------------------+\n | Enabled 3 consumers   |\n +-----------------------+\n 1 row in set (0.00 sec)\n \n Query OK, 0 rows affected (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_enable_instrument","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Enables instruments within Performance Schema \n matching the input pattern.\n \n Parameters\n \n in_pattern (VARCHAR(128)):\n A LIKE pattern match (using \"%in_pattern%\") of events to enable\n \n Example\n \n To enable all mutex instruments:\n \n mysql> CALL sys.ps_setup_enable_instrument('wait/synch/mutex');\n +-------------------------+\n | summary                 |\n +-------------------------+\n | Enabled 155 instruments |\n +-------------------------+\n 1 row in set (0.02 sec)\n \n Query OK, 0 rows affected (0.02 sec)\n \n To enable just a the scpecific TCP/IP based network IO instrument:\n \n mysql> CALL sys.ps_setup_enable_instrument('wait/io/socket/sql/server_tcpip_socket');\n +-----------------------+\n | summary               |\n +-----------------------+\n | Enabled 1 instruments |\n +-----------------------+\n 1 row in set (0.00 sec)\n \n Query OK, 0 rows affected (0.00 sec)\n \n To enable all instruments:\n \n mysql> CALL sys.ps_setup_enable_instrument('');\n +-------------------------+\n | summary                 |\n +-------------------------+\n | Enabled 547 instruments |\n +-------------------------+\n 1 row in set (0.01 sec)\n \n Query OK, 0 rows affected (0.01 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_enable_thread","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Enable the given connection/thread in Performance Schema.\n \n Parameters\n \n in_connection_id (BIGINT):\n The connection ID (PROCESSLIST_ID from performance_schema.threads\n or the ID shown within SHOW PROCESSLIST)\n \n Example\n \n mysql> CALL sys.ps_setup_enable_thread(3);\n +------------------+\n | summary          |\n +------------------+\n | Enabled 1 thread |\n +------------------+\n 1 row in set (0.01 sec)\n \n To enable the current connection:\n \n mysql> CALL sys.ps_setup_enable_thread(CONNECTION_ID());\n +------------------+\n | summary          |\n +------------------+\n | Enabled 1 thread |\n +------------------+\n 1 row in set (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_reload_saved","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Reloads a saved Performance Schema configuration,\n so that you can alter the setup for debugging purposes, \n but restore it to a previous state.\n \n Use the companion procedure - ps_setup_save(), to \n save a configuration.\n \n Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\n \n Parameters\n \n None.\n \n Example\n \n mysql> CALL sys.ps_setup_save();\n Query OK, 0 rows affected (0.08 sec)\n \n mysql> UPDATE performance_schema.setup_instruments SET enabled = 'YES', timed = 'YES';\n Query OK, 547 rows affected (0.40 sec)\n Rows matched: 784  Changed: 547  Warnings: 0\n \n /* Run some tests that need more detailed instrumentation here */\n \n mysql> CALL sys.ps_setup_reload_saved();\n Query OK, 0 rows affected (0.32 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_reset_to_default","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Resets the Performance Schema setup to the default settings.\n \n Parameters\n \n in_verbose (BOOLEAN):\n Whether to print each setup stage (including the SQL) whilst running.\n \n Example\n \n mysql> CALL sys.ps_setup_reset_to_default(true)\\G\n *************************** 1. row ***************************\n status: Resetting: setup_actors\n DELETE\n FROM performance_schema.setup_actors\n WHERE NOT (HOST = '%' AND USER = '%' AND ROLE = '%')\n 1 row in set (0.00 sec)\n \n *************************** 1. row ***************************\n status: Resetting: setup_actors\n INSERT IGNORE INTO performance_schema.setup_actors\n VALUES ('%', '%', '%')\n 1 row in set (0.00 sec)\n ...\n \n mysql> CALL sys.ps_setup_reset_to_default(false)G\n Query OK, 0 rows affected (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_save","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Saves the current configuration of Performance Schema, \n so that you can alter the setup for debugging purposes, \n but restore it to a previous state.\n \n Use the companion procedure - ps_setup_reload_saved(), to \n restore the saved config.\n \n Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\n \n Parameters\n \n None.\n \n Example\n \n mysql> CALL sys.ps_setup_save();\n Query OK, 0 rows affected (0.08 sec)\n \n mysql> UPDATE performance_schema.setup_instruments \n ->    SET enabled = 'YES', timed = 'YES';\n Query OK, 547 rows affected (0.40 sec)\n Rows matched: 784  Changed: 547  Warnings: 0\n \n /* Run some tests that need more detailed instrumentation here */\n \n mysql> CALL sys.ps_setup_reload_saved();\n Query OK, 0 rows affected (0.32 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_show_disabled","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Shows all currently disable Performance Schema configuration.\n \n Parameters\n \n in_in_show_instruments (BOOLEAN):\n Whether to print disabled instruments (can print many items)\n \n in_in_show_threads (BOOLEAN):\n Whether to print disabled threads\n \n Example\n \n mysql> CALL sys.ps_setup_show_disabled(TRUE, TRUE);\n +----------------------------+\n | performance_schema_enabled |\n +----------------------------+\n |                          1 |\n +----------------------------+\n 1 row in set (0.00 sec)\n \n +--------------------+\n | enabled_users      |\n +--------------------+\n | 'mark'@'localhost' |\n +--------------------+\n 1 row in set (0.00 sec)\n \n +-------------+----------------------+---------+-------+\n | object_type | objects              | enabled | timed |\n +-------------+----------------------+---------+-------+\n | EVENT       | mysql.%              | NO      | NO    |\n | EVENT       | performance_schema.% | NO      | NO    |\n | EVENT       | information_schema.% | NO      | NO    |\n | FUNCTION    | mysql.%              | NO      | NO    |\n | FUNCTION    | performance_schema.% | NO      | NO    |\n | FUNCTION    | information_schema.% | NO      | NO    |\n | PROCEDURE   | mysql.%              | NO      | NO    |\n | PROCEDURE   | performance_schema.% | NO      | NO    |\n | PROCEDURE   | information_schema.% | NO      | NO    |\n | TABLE       | mysql.%              | NO      | NO    |\n | TABLE       | performance_schema.% | NO      | NO    |\n | TABLE       | information_schema.% | NO      | NO    |\n | TRIGGER     | mysql.%              | NO      | NO    |\n | TRIGGER     | performance_schema.% | NO      | NO    |\n | TRIGGER     | information_schema.% | NO      | NO    |\n +-------------+----------------------+---------+-------+\n 15 rows in set (0.00 sec)\n \n +----------------------------------+\n | disabled_consumers               |\n +----------------------------------+\n | events_stages_current            |\n | events_stages_history            |\n | events_stages_history_long       |\n | events_statements_history        |\n | events_statements_history_long   |\n | events_transactions_history      |\n | events_transactions_history_long |\n | events_waits_current             |\n | events_waits_history             |\n | events_waits_history_long        |\n +----------------------------------+\n 10 rows in set (0.00 sec)\n \n Empty set (0.00 sec)\n \n +---------------------------------------------------------------------------------------+-------+\n | disabled_instruments                                                                  | timed |\n +---------------------------------------------------------------------------------------+-------+\n | wait/synch/mutex/sql/TC_LOG_MMAP::LOCK_tc                                             | NO    |\n | wait/synch/mutex/sql/LOCK_des_key_file                                                | NO    |\n | wait/synch/mutex/sql/MYSQL_BIN_LOG::LOCK_commit                                       | NO    |\n ...\n | memory/sql/servers_cache                                                              | NO    |\n | memory/sql/udf_mem                                                                    | NO    |\n | wait/lock/metadata/sql/mdl                                                            | NO    |\n +---------------------------------------------------------------------------------------+-------+\n 547 rows in set (0.00 sec)\n \n Query OK, 0 rows affected (0.01 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_show_disabled_consumers","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Shows all currently disabled consumers.\n \n Parameters\n \n None\n \n Example\n \n mysql> CALL sys.ps_setup_show_disabled_consumers();\n \n +---------------------------+\n | disabled_consumers        |\n +---------------------------+\n | events_statements_current |\n | global_instrumentation    |\n | thread_instrumentation    |\n | statements_digest         |\n +---------------------------+\n 4 rows in set (0.05 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_show_disabled_instruments","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Shows all currently disabled instruments.\n \n Parameters\n \n None\n \n Example\n \n mysql> CALL sys.ps_setup_show_disabled_instruments();\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_show_enabled","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Shows all currently enabled Performance Schema configuration.\n \n Parameters\n \n in_show_instruments (BOOLEAN):\n Whether to print enabled instruments (can print many items)\n \n in_show_threads (BOOLEAN):\n Whether to print enabled threads\n \n Example\n \n mysql> CALL sys.ps_setup_show_enabled(TRUE, TRUE);\n +----------------------------+\n | performance_schema_enabled |\n +----------------------------+\n |                          1 |\n +----------------------------+\n 1 row in set (0.00 sec)\n \n +---------------+\n | enabled_users |\n +---------------+\n | '%'@'%'       |\n +---------------+\n 1 row in set (0.01 sec)\n \n +----------------------+---------+-------+\n | objects              | enabled | timed |\n +----------------------+---------+-------+\n | mysql.%              | NO      | NO    |\n | performance_schema.% | NO      | NO    |\n | information_schema.% | NO      | NO    |\n | %.%                  | YES     | YES   |\n +----------------------+---------+-------+\n 4 rows in set (0.01 sec)\n \n +---------------------------+\n | enabled_consumers         |\n +---------------------------+\n | events_statements_current |\n | global_instrumentation    |\n | thread_instrumentation    |\n | statements_digest         |\n +---------------------------+\n 4 rows in set (0.05 sec)\n \n +--------------------------+-------------+\n | enabled_threads          | thread_type |\n +--------------------------+-------------+\n | innodb/srv_master_thread | BACKGROUND  |\n | root@localhost           | FOREGROUND  |\n | root@localhost           | FOREGROUND  |\n | root@localhost           | FOREGROUND  |\n | root@localhost           | FOREGROUND  |\n +--------------------------+-------------+\n 5 rows in set (0.03 sec)\n \n +-------------------------------------+-------+\n | enabled_instruments                 | timed |\n +-------------------------------------+-------+\n | wait/io/file/sql/map                | YES   |\n | wait/io/file/sql/binlog             | YES   |\n ...\n | statement/com/Error                 | YES   |\n | statement/com/                      | YES   |\n | idle                                | YES   |\n +-------------------------------------+-------+\n 210 rows in set (0.08 sec)\n \n Query OK, 0 rows affected (0.89 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_show_enabled_consumers","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Shows all currently enabled consumers.\n \n Parameters\n \n None\n \n Example\n \n mysql> CALL sys.ps_setup_show_enabled_consumers();\n \n +---------------------------+\n | enabled_consumers         |\n +---------------------------+\n | events_statements_current |\n | global_instrumentation    |\n | thread_instrumentation    |\n | statements_digest         |\n +---------------------------+\n 4 rows in set (0.05 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_show_enabled_instruments","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Shows all currently enabled instruments.\n \n Parameters\n \n None\n \n Example\n \n mysql> CALL sys.ps_setup_show_enabled_instruments();\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_statement_avg_latency_histogram","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Outputs a textual histogram graph of the average latency values\n across all normalized queries tracked within the Performance Schema\n events_statements_summary_by_digest table.\n \n Can be used to show a very high level picture of what kind of \n latency distribution statements running within this instance have.\n \n Parameters\n \n None.\n \n Example\n \n mysql> CALL sys.ps_statement_avg_latency_histogram()G\n *************************** 1. row ***************************\n Performance Schema Statement Digest Average Latency Histogram:\n \n . = 1 unit\n * = 2 units\n # = 3 units\n \n (0 - 38ms)     240 | ################################################################################\n (38 - 77ms)    38  | ......................................\n (77 - 115ms)   3   | ...\n (115 - 154ms)  62  | *******************************\n (154 - 192ms)  3   | ...\n (192 - 231ms)  0   |\n (231 - 269ms)  0   |\n (269 - 307ms)  0   |\n (307 - 346ms)  0   |\n (346 - 384ms)  1   | .\n (384 - 423ms)  1   | .\n (423 - 461ms)  0   |\n (461 - 499ms)  0   |\n (499 - 538ms)  0   |\n (538 - 576ms)  0   |\n (576 - 615ms)  1   | .\n \n Total Statements: 350; Buckets: 16; Bucket Size: 38 ms;\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_trace_statement_digest","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Traces all instrumentation within Performance Schema for a specific\n Statement Digest. \n \n When finding a statement of interest within the \n performance_schema.events_statements_summary_by_digest table, feed\n the DIGEST MD5 value in to this procedure, set how long to poll for, \n and at what interval to poll, and it will generate a report of all \n statistics tracked within Performance Schema for that digest for the\n interval.\n \n It will also attempt to generate an EXPLAIN for the longest running \n example of the digest during the interval. Note this may fail, as\n Performance Schema truncates long SQL_TEXT values (and hence the \n EXPLAIN will fail due to parse errors).\n \n Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\n \n Parameters\n \n in_digest (VARCHAR(32)):\n The statement digest identifier you would like to analyze\n in_runtime (INT):\n The number of seconds to run analysis for (defaults to a minute)\n in_interval (DECIMAL(2,2)):\n The interval (in seconds, may be fractional) at which to try\n and take snapshots (defaults to a second)\n in_start_fresh (BOOLEAN):\n Whether to TRUNCATE the events_statements_history_long and\n events_stages_history_long tables before starting (default false)\n in_auto_enable (BOOLEAN):\n Whether to automatically turn on required consumers (default false)\n \n Example\n \n mysql> call ps_trace_statement_digest('891ec6860f98ba46d89dd20b0c03652c', 10, 0.1, true, true);\n +--------------------+\n | SUMMARY STATISTICS |\n +--------------------+\n | SUMMARY STATISTICS |\n +--------------------+\n 1 row in set (9.11 sec)\n \n +------------+-----------+-----------+-----------+---------------+------------+------------+\n | executions | exec_time | lock_time | rows_sent | rows_examined | tmp_tables | full_scans |\n +------------+-----------+-----------+-----------+---------------+------------+------------+\n |         21 | 4.11 ms   | 2.00 ms   |         0 |            21 |          0 |          0 |\n +------------+-----------+-----------+-----------+---------------+------------+------------+\n 1 row in set (9.11 sec)\n \n +------------------------------------------+-------+-----------+\n | event_name                               | count | latency   |\n +------------------------------------------+-------+-----------+\n | stage/sql/checking query cache for query |    16 | 724.37 us |\n | stage/sql/statistics                     |    16 | 546.92 us |\n | stage/sql/freeing items                  |    18 | 520.11 us |\n | stage/sql/init                           |    51 | 466.80 us |\n ...\n | stage/sql/cleaning up                    |    18 | 11.92 us  |\n | stage/sql/executing                      |    16 | 6.95 us   |\n +------------------------------------------+-------+-----------+\n 17 rows in set (9.12 sec)\n \n +---------------------------+\n | LONGEST RUNNING STATEMENT |\n +---------------------------+\n | LONGEST RUNNING STATEMENT |\n +---------------------------+\n 1 row in set (9.16 sec)\n \n +-----------+-----------+-----------+-----------+---------------+------------+-----------+\n | thread_id | exec_time | lock_time | rows_sent | rows_examined | tmp_tables | full_scan |\n +-----------+-----------+-----------+-----------+---------------+------------+-----------+\n |    166646 | 618.43 us | 1.00 ms   |         0 |             1 |          0 |         0 |\n +-----------+-----------+-----------+-----------+---------------+------------+-----------+\n 1 row in set (9.16 sec)\n \n // Truncated for clarity...\n +-----------------------------------------------------------------+\n | sql_text                                                        |\n +-----------------------------------------------------------------+\n | select hibeventhe0_.id as id1382_, hibeventhe0_.createdTime ... |\n +-----------------------------------------------------------------+\n 1 row in set (9.17 sec)\n \n +------------------------------------------+-----------+\n | event_name                               | latency   |\n +------------------------------------------+-----------+\n | stage/sql/init                           | 8.61 us   |\n | stage/sql/Waiting for query cache lock   | 453.23 us |\n | stage/sql/init                           | 331.07 ns |\n | stage/sql/checking query cache for query | 43.04 us  |\n ...\n | stage/sql/freeing items                  | 30.46 us  |\n | stage/sql/cleaning up                    | 662.13 ns |\n +------------------------------------------+-----------+\n 18 rows in set (9.23 sec)\n \n +----+-------------+--------------+-------+---------------+-----------+---------+-------------+------+-------+\n | id | select_type | table        | type  | possible_keys | key       | key_len | ref         | rows | Extra |\n +----+-------------+--------------+-------+---------------+-----------+---------+-------------+------+-------+\n |  1 | SIMPLE      | hibeventhe0_ | const | fixedTime     | fixedTime | 775     | const,const |    1 | NULL  |\n +----+-------------+--------------+-------+---------------+-----------+---------+-------------+------+-------+\n 1 row in set (9.27 sec)\n \n Query OK, 0 rows affected (9.28 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_trace_thread","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Dumps all data within Performance Schema for an instrumented thread,\n to create a DOT formatted graph file. \n \n Each resultset returned from the procedure should be used for a complete graph\n \n Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\n \n Parameters\n \n in_thread_id (BIGINT UNSIGNED):\n The thread that you would like a stack trace for\n in_outfile  (VARCHAR(255)):\n The filename the dot file will be written to\n in_max_runtime (DECIMAL(20,2)):\n The maximum time to keep collecting data.\n Use NULL to get the default which is 60 seconds.\n in_interval (DECIMAL(20,2)): \n How long to sleep between data collections. \n Use NULL to get the default which is 1 second.\n in_start_fresh (BOOLEAN):\n Whether to reset all Performance Schema data before tracing.\n in_auto_setup (BOOLEAN):\n Whether to disable all other threads and enable all consumers/instruments. \n This will also reset the settings at the end of the run.\n in_debug (BOOLEAN):\n Whether you would like to include file:lineno in the graph\n \n Example\n \n mysql> CALL sys.ps_trace_thread(25, CONCAT('/tmp/stack-', REPLACE(NOW(), ' ', '-'), '.dot'), NULL, NULL, TRUE, TRUE, TRUE);\n +-------------------+\n | summary           |\n +-------------------+\n | Disabled 1 thread |\n +-------------------+\n 1 row in set (0.00 sec)\n \n +---------------------------------------------+\n | Info                                        |\n +---------------------------------------------+\n | Data collection starting for THREAD_ID = 25 |\n +---------------------------------------------+\n 1 row in set (0.03 sec)\n \n +-----------------------------------------------------------+\n | Info                                                      |\n +-----------------------------------------------------------+\n | Stack trace written to /tmp/stack-2014-02-16-21:18:41.dot |\n +-----------------------------------------------------------+\n 1 row in set (60.07 sec)\n \n +-------------------------------------------------------------------+\n | Convert to PDF                                                    |\n +-------------------------------------------------------------------+\n | dot -Tpdf -o /tmp/stack_25.pdf /tmp/stack-2014-02-16-21:18:41.dot |\n +-------------------------------------------------------------------+\n 1 row in set (60.07 sec)\n \n +-------------------------------------------------------------------+\n | Convert to PNG                                                    |\n +-------------------------------------------------------------------+\n | dot -Tpng -o /tmp/stack_25.png /tmp/stack-2014-02-16-21:18:41.dot |\n +-------------------------------------------------------------------+\n 1 row in set (60.07 sec)\n \n +------------------+\n | summary          |\n +------------------+\n | Enabled 1 thread |\n +------------------+\n 1 row in set (60.32 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_truncate_all_tables","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Truncates all summary tables within Performance Schema, \n resetting all aggregated instrumentation as a snapshot.\n \n Parameters\n \n in_verbose (BOOLEAN):\n Whether to print each TRUNCATE statement before running\n \n Example\n \n mysql> CALL sys.ps_truncate_all_tables(false);\n +---------------------+\n | summary             |\n +---------------------+\n | Truncated 44 tables |\n +---------------------+\n 1 row in set (0.10 sec)\n \n Query OK, 0 rows affected (0.10 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"statement_performance_analyzer","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Create a report of the statements running on the server.\n \n The views are calculated based on the overall and/or delta activity.\n \n Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\n \n Parameters\n \n in_action (ENUM('snapshot', 'overall', 'delta', 'create_tmp', 'create_table', 'save', 'cleanup')):\n The action to take. Supported actions are:\n * snapshot      Store a snapshot. The default is to make a snapshot of the current content of\n performance_schema.events_statements_summary_by_digest, but by setting in_table\n this can be overwritten to copy the content of the specified table.\n The snapshot is stored in the sys.tmp_digests temporary table.\n * overall       Generate analyzis based on the content specified by in_table. For the overall analyzis,\n in_table can be NOW() to use a fresh snapshot. This will overwrite an existing snapshot.\n Use NULL for in_table to use the existing snapshot. If in_table IS NULL and no snapshot\n exists, a new will be created.\n See also in_views and @sys.statement_performance_analyzer.limit.\n * delta         Generate a delta analysis. The delta will be calculated between the reference table in\n in_table and the snapshot. An existing snapshot must exist.\n The action uses the sys.tmp_digests_delta temporary table.\n See also in_views and @sys.statement_performance_analyzer.limit.\n * create_table  Create a regular table suitable for storing the snapshot for later use, e.g. for\n calculating deltas.\n * create_tmp    Create a temporary table suitable for storing the snapshot for later use, e.g. for\n calculating deltas.\n * save          Save the snapshot in the table specified by in_table. The table must exists and have\n the correct structure.\n If no snapshot exists, a new is created.\n * cleanup       Remove the temporary tables used for the snapshot and delta.\n \n in_table (VARCHAR(129)):\n The table argument used for some actions. Use the format 'db1.t1' or 't1' without using any backticks (`)\n for quoting. Periods (.) are not supported in the database and table names.\n \n The meaning of the table for each action supporting the argument is:\n \n * snapshot      The snapshot is created based on the specified table. Set to NULL or NOW() to use\n the current content of performance_schema.events_statements_summary_by_digest.\n * overall       The table with the content to create the overall analyzis for. The following values\n can be used:\n - A table name - use the content of that table.\n - NOW()        - create a fresh snapshot and overwrite the existing snapshot.\n - NULL         - use the last stored snapshot.\n * delta         The table name is mandatory and specified the reference view to compare the currently\n stored snapshot against. If no snapshot exists, a new will be created.\n * create_table  The name of the regular table to create.\n * create_tmp    The name of the temporary table to create.\n * save          The name of the table to save the currently stored snapshot into.\n \n in_views (SET ('with_runtimes_in_95th_percentile', 'analysis', 'with_errors_or_warnings',\n 'with_full_table_scans', 'with_sorting', 'with_temp_tables', 'custom'))\n Which views to include:  * with_runtimes_in_95th_percentile  Based on the sys.statements_with_runtimes_in_95th_percentile view * analysis                          Based on the sys.statement_analysis view * with_errors_or_warnings           Based on the sys.statements_with_errors_or_warnings view * with_full_table_scans             Based on the sys.statements_with_full_table_scans view * with_sorting                      Based on the sys.statements_with_sorting view * with_temp_tables                  Based on the sys.statements_with_temp_tables view * custom                            Use a custom view. This view must be specified in @sys.statement_performance_analyzer.view to an existing view or a query  Default is to include all except 'custom'.   Configuration Options  sys.statement_performance_analyzer.limit The maximum number of rows to include for the views that does not have a built-in limit (e.g. the 95th percentile view). If not set the limit is 100.  sys.statement_performance_analyzer.view Used together with the 'custom' view. If the value contains a space, it is considered a query, otherwise it must be an existing view querying the performance_schema.events_statements_summary_by_digest table. There cannot be any limit clause including in the query or view definition if @sys.statement_performance_analyzer.limit > 0. If specifying a view, use the same format as for in_table.  sys.debug Whether to provide debugging output. Default is 'OFF'. Set to 'ON' to include.   Example  To create a report with the queries in the 95th percentile since last truncate of performance_schema.events_statements_summary_by_digest and the delta for a 1 minute period:  1. Create a temporary table to store the initial snapshot. 2. Create the initial snapshot. 3. Save the initial snapshot in the temporary table. 4. Wait one minute. 5. Create a new snapshot. 6. Perform analyzis based on the new snapshot. 7. Perform analyzis based on the delta between the initial and new snapshots.  mysql> CALL sys.statement_performance_analyzer('create_tmp', 'mydb.tmp_digests_ini', NULL); Query OK, 0 rows affected (0.08 sec)  mysql> CALL sys.statement_performance_analyzer('snapshot', NULL, NULL); Query OK, 0 rows affected (0.02 sec)  mysql> CALL sys.statement_performance_analyzer('save', 'mydb.tmp_digests_ini', NULL); Query OK, 0 rows affected (0.00 sec)  mysql> DO SLEEP(60); Query OK, 0 rows affected (1 min 0.00 sec)  mysql> CALL sys.statement_performance_analyzer('snapshot', NULL, NULL); Query OK, 0 rows affected (0.02 sec)  mysql> CALL sys.statement_performance_analyzer('overall', NULL, 'with_runtimes_in_95th_percentile'); +-----------------------------------------+ | Next Output                             | +-----------------------------------------+ | Queries with Runtime in 95th Percentile | +-----------------------------------------+ 1 row in set (0.05 sec)  ...  mysql> CALL sys.statement_performance_analyzer('delta', 'mydb.tmp_digests_ini', 'with_runtimes_in_95th_percentile'); +-----------------------------------------+ | Next Output                             | +-----------------------------------------+ | Queries with Runtime in 95th Percentile | +-----------------------------------------+ 1 row in set (0.03 sec)  ...   To create an overall report of the 95th percentile queries and the top 10 queries with full table scans:  mysql> CALL sys.statement_performance_analyzer('snapshot', NULL, NULL); Query OK, 0 rows affected (0.01 sec)                                     mysql> SET @sys.statement_performance_analyzer.limit = 10; Query OK, 0 rows affected (0.00 sec)            mysql> CALL sys.statement_performance_analyzer('overall', NULL, 'with_runtimes_in_95th_percentile,with_full_table_scans'); +-----------------------------------------+ | Next Output                             | +-----------------------------------------+ | Queries with Runtime in 95th Percentile | +-----------------------------------------+ 1 row in set (0.01 sec)  ...  +-------------------------------------+ | Next Output                         | +-------------------------------------+ | Top 10 Queries with Full Table Scan | +-------------------------------------+ 1 row in set (0.09 sec)  ...   Use a custom view showing the top 10 query sorted by total execution time refreshing the view every minute using the watch command in Linux.  mysql> CREATE OR REPLACE VIEW mydb.my_statements AS -> SELECT sys.format_statement(DIGEST_TEXT) AS query, ->        SCHEMA_NAME AS db, ->        COUNT_STAR AS exec_count, ->        sys.format_time(SUM_TIMER_WAIT) AS total_latency, ->        sys.format_time(AVG_TIMER_WAIT) AS avg_latency, ->        ROUND(IFNULL(SUM_ROWS_SENT / NULLIF(COUNT_STAR, 0), 0)) AS rows_sent_avg, ->        ROUND(IFNULL(SUM_ROWS_EXAMINED / NULLIF(COUNT_STAR, 0), 0)) AS rows_examined_avg, ->        ROUND(IFNULL(SUM_ROWS_AFFECTED / NULLIF(COUNT_STAR, 0), 0)) AS rows_affected_avg, ->        DIGEST AS digest ->   FROM performance_schema.events_statements_summary_by_digest -> ORDER BY SUM_TIMER_WAIT DESC; Query OK, 0 rows affected (0.01 sec)  mysql> CALL sys.statement_performance_analyzer('create_table', 'mydb.digests_prev', NULL); Query OK, 0 rows affected (0.10 sec)  shell$ watch -n 60 \"mysql sys --table -e \" > SET @sys.statement_performance_analyzer.view = 'mydb.my_statements'; > SET @sys.statement_performance_analyzer.limit = 10; > CALL statement_performance_analyzer('snapshot', NULL, NULL); > CALL statement_performance_analyzer('delta', 'mydb.digests_prev', 'custom'); > CALL statement_performance_analyzer('save', 'mydb.digests_prev', NULL); > \"\"  Every 60.0s: mysql sys --table -e \"                                                                                                   ...  Mon Dec 22 10:58:51 2014  +----------------------------------+ | Next Output                      | +----------------------------------+ | Top 10 Queries Using Custom View | +----------------------------------+ +-------------------+-------+------------+---------------+-------------+---------------+-------------------+-------------------+----------------------------------+ | query             | db    | exec_count | total_latency | avg_latency | rows_sent_avg | rows_examined_avg | rows_affected_avg | digest                           | +-------------------+-------+------------+---------------+-------------+---------------+-------------------+-------------------+----------------------------------+ ... ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"table_exists","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Tests whether the table specified in in_db and in_table exists either as a regular\n table, or as a temporary table. The returned value corresponds to the table that\n will be used, so if there's both a temporary and a permanent table with the given\n name, then 'TEMPORARY' will be returned.\n \n Parameters\n \n in_db (VARCHAR(64)):\n The database name to check for the existance of the table in.\n \n in_table (VARCHAR(64)):\n The name of the table to check the existance of.\n \n out_exists ENUM('', 'BASE TABLE', 'VIEW', 'TEMPORARY'):\n The return value: whether the table exists. The value is one of:\n * ''           - the table does not exist neither as a base table, view, nor temporary table.\n * 'BASE TABLE' - the table name exists as a permanent base table table.\n * 'VIEW'       - the table name exists as a view.\n * 'TEMPORARY'  - the table name exists as a temporary table.\n \n Example\n \n mysql> CREATE DATABASE db1;\n Query OK, 1 row affected (0.07 sec)\n \n mysql> use db1;\n Database changed\n mysql> CREATE TABLE t1 (id INT PRIMARY KEY);\n Query OK, 0 rows affected (0.08 sec)\n \n mysql> CREATE TABLE t2 (id INT PRIMARY KEY);\n Query OK, 0 rows affected (0.08 sec)\n \n mysql> CREATE view v_t1 AS SELECT * FROM t1;\n Query OK, 0 rows affected (0.00 sec)\n \n mysql> CREATE TEMPORARY TABLE t1 (id INT PRIMARY KEY);\n Query OK, 0 rows affected (0.00 sec)\n \n mysql> CALL sys.table_exists('db1', 't1', @exists); SELECT @exists;\n Query OK, 0 rows affected (0.00 sec)\n \n +------------+\n | @exists    |\n +------------+\n | TEMPORARY  |\n +------------+\n 1 row in set (0.00 sec)\n \n mysql> CALL sys.table_exists('db1', 't2', @exists); SELECT @exists;\n Query OK, 0 rows affected (0.00 sec)\n \n +------------+\n | @exists    |\n +------------+\n | BASE TABLE |\n +------------+\n 1 row in set (0.01 sec)\n \n mysql> CALL sys.table_exists('db1', 'v_t1', @exists); SELECT @exists;\n Query OK, 0 rows affected (0.00 sec)\n \n +---------+\n | @exists |\n +---------+\n | VIEW    |\n +---------+\n 1 row in set (0.00 sec)\n \n mysql> CALL sys.table_exists('db1', 't3', @exists); SELECT @exists;\n Query OK, 0 rows affected (0.01 sec)\n \n +---------+\n | @exists |\n +---------+\n |         |\n +---------+\n 1 row in set (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"}]}
(08:25:00.842)[log]: [ 'p_A_djent',
  'p_A_folk',
  'p_G_djent',
  'create_synonym_db',
  'diagnostics',
  'execute_prepared_stmt',
  'ps_setup_disable_background_threads',
  'ps_setup_disable_consumer',
  'ps_setup_disable_instrument',
  'ps_setup_disable_thread',
  'ps_setup_enable_background_threads',
  'ps_setup_enable_consumer',
  'ps_setup_enable_instrument',
  'ps_setup_enable_thread',
  'ps_setup_reload_saved',
  'ps_setup_reset_to_default',
  'ps_setup_save',
  'ps_setup_show_disabled',
  'ps_setup_show_disabled_consumers',
  'ps_setup_show_disabled_instruments',
  'ps_setup_show_enabled',
  'ps_setup_show_enabled_consumers',
  'ps_setup_show_enabled_instruments',
  'ps_statement_avg_latency_histogram',
  'ps_trace_statement_digest',
  'ps_trace_thread',
  'ps_truncate_all_tables',
  'statement_performance_analyzer',
  'table_exists' ]
(08:25:00.853)[log]: in = {}
(08:25:00.853)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'table_exists' at line 1
(08:25:00.854)[log]: undefined
(08:25:00.855)[log]: in = {}
(08:25:00.855)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'p_A_djent' at line 1
(08:25:00.855)[log]: undefined
(08:25:00.856)[log]: in = {}
(08:25:00.856)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'p_A_folk' at line 1
(08:25:00.856)[log]: undefined
(08:25:00.857)[log]: in = {}
(08:25:00.857)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'p_G_djent' at line 1
(08:25:00.857)[log]: undefined
(08:25:00.857)[log]: in = {}
(08:25:00.858)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'create_synonym_db' at line 1
(08:25:00.858)[log]: undefined
(08:25:00.858)[log]: in = {}
(08:25:00.858)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'diagnostics' at line 1
(08:25:00.858)[log]: undefined
(08:25:00.859)[log]: in = {}
(08:25:00.859)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'execute_prepared_stmt' at line 1
(08:25:00.859)[log]: undefined
(08:25:00.860)[log]: in = {}
(08:25:00.861)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_disable_background_threads' at line 1
(08:25:00.861)[log]: undefined
(08:25:00.861)[log]: in = {}
(08:25:00.861)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_disable_consumer' at line 1
(08:25:00.861)[log]: undefined
(08:25:00.863)[log]: in = {}
(08:25:00.863)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_disable_instrument' at line 1
(08:25:00.863)[log]: undefined
(08:25:00.864)[log]: in = {}
(08:25:00.864)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_disable_thread' at line 1
(08:25:00.864)[log]: undefined
(08:25:00.865)[log]: in = {}
(08:25:00.865)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_enable_background_threads' at line 1
(08:25:00.865)[log]: undefined
(08:25:00.866)[log]: in = {}
(08:25:00.866)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_enable_consumer' at line 1
(08:25:00.866)[log]: undefined
(08:25:00.867)[log]: in = {}
(08:25:00.868)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_enable_instrument' at line 1
(08:25:00.868)[log]: undefined
(08:25:00.868)[log]: in = {}
(08:25:00.868)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_enable_thread' at line 1
(08:25:00.868)[log]: undefined
(08:25:00.869)[log]: in = {}
(08:25:00.869)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_reload_saved' at line 1
(08:25:00.869)[log]: undefined
(08:25:00.870)[log]: in = {}
(08:25:00.870)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_reset_to_default' at line 1
(08:25:00.870)[log]: undefined
(08:25:00.870)[log]: in = {}
(08:25:00.870)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_save' at line 1
(08:25:00.871)[log]: undefined
(08:25:00.871)[log]: in = {}
(08:25:00.871)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_show_disabled' at line 1
(08:25:00.871)[log]: undefined
(08:25:00.873)[log]: in = {}
(08:25:00.873)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_show_disabled_consumers' at line 1
(08:25:00.873)[log]: undefined
(08:25:00.874)[log]: in = {}
(08:25:00.874)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_show_disabled_instruments' at line 1
(08:25:00.874)[log]: undefined
(08:25:00.874)[log]: in = {}
(08:25:00.874)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_show_enabled' at line 1
(08:25:00.874)[log]: undefined
(08:25:00.875)[log]: in = {}
(08:25:00.875)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_show_enabled_consumers' at line 1
(08:25:00.875)[log]: undefined
(08:25:00.876)[log]: in = {}
(08:25:00.876)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_setup_show_enabled_instruments' at line 1
(08:25:00.876)[log]: undefined
(08:25:00.876)[log]: in = {}
(08:25:00.877)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_statement_avg_latency_histogram' at line 1
(08:25:00.877)[log]: undefined
(08:25:00.877)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_trace_statement_digest' at line 1
(08:25:00.877)[log]: in = {}
(08:25:00.877)[log]: undefined
(08:25:00.878)[log]: in = {}
(08:25:00.878)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_trace_thread' at line 1
(08:25:00.878)[log]: undefined
(08:25:00.879)[log]: in = {}
(08:25:00.880)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'ps_truncate_all_tables' at line 1
(08:25:00.880)[log]: undefined
(08:25:00.880)[log]: in = {}
(08:25:00.880)[ERR]: out =Error: ER_PARSE_ERROR: You have an error in your SQL syntax; check the manual that corresponds to your MySQL server version for the right syntax to use near 'statement_performance_analyzer' at line 1
(08:25:00.880)[log]: undefined
(08:29:07.443)[inf]: Initializing server on port 2828.
(08:29:15.108)[log]: in = {}
(08:29:15.110)[log]: out = {"error":"none","data":[{"Db":"newTest","Name":"p_A_djent","Type":"PROCEDURE","Definer":"mlndz@localhost","Modified":"2016-09-16T03:56:01.000Z","Created":"2016-09-16T03:56:01.000Z","Security_type":"DEFINER","Comment":"","character_set_client":"latin1","collation_connection":"latin1_swedish_ci","Database Collation":"latin1_swedish_ci"},{"Db":"newTest","Name":"p_A_folk","Type":"PROCEDURE","Definer":"mlndz@localhost","Modified":"2016-09-16T04:17:45.000Z","Created":"2016-09-16T04:17:45.000Z","Security_type":"DEFINER","Comment":"","character_set_client":"latin1","collation_connection":"latin1_swedish_ci","Database Collation":"latin1_swedish_ci"},{"Db":"newTest","Name":"p_G_djent","Type":"PROCEDURE","Definer":"mlndz@localhost","Modified":"2016-09-16T03:54:31.000Z","Created":"2016-09-16T03:54:31.000Z","Security_type":"DEFINER","Comment":"","character_set_client":"latin1","collation_connection":"latin1_swedish_ci","Database Collation":"latin1_swedish_ci"},{"Db":"sys","Name":"create_synonym_db","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Takes a source database name and synonym name, and then creates the \n synonym database with views that point to all of the tables within\n the source database.\n \n Useful for creating a \"ps\" synonym for \"performance_schema\",\n or \"is\" instead of \"information_schema\", for example.\n \n Parameters\n \n in_db_name (VARCHAR(64)):\n The database name that you would like to create a synonym for.\n in_synonym (VARCHAR(64)):\n The database synonym name.\n \n Example\n \n mysql> SHOW DATABASES;\n +--------------------+\n | Database           |\n +--------------------+\n | information_schema |\n | mysql              |\n | performance_schema |\n | sys                |\n | test               |\n +--------------------+\n 5 rows in set (0.00 sec)\n \n mysql> CALL sys.create_synonym_db('performance_schema', 'ps');\n +-------------------------------------+\n | summary                             |\n +-------------------------------------+\n | Created 74 views in the ps database |\n +-------------------------------------+\n 1 row in set (8.57 sec)\n \n Query OK, 0 rows affected (8.57 sec)\n \n mysql> SHOW DATABASES;\n +--------------------+\n | Database           |\n +--------------------+\n | information_schema |\n | mysql              |\n | performance_schema |\n | ps                 |\n | sys                |\n | test               |\n +--------------------+\n 6 rows in set (0.00 sec)\n \n mysql> SHOW FULL TABLES FROM ps;\n +------------------------------------------------------+------------+\n | Tables_in_ps                                         | Table_type |\n +------------------------------------------------------+------------+\n | accounts                                             | VIEW       |\n | cond_instances                                       | VIEW       |\n | events_stages_current                                | VIEW       |\n | events_stages_history                                | VIEW       |\n ...\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"diagnostics","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Create a report of the current status of the server for diagnostics purposes. Data collected includes (some items depends on versions and settings):\n \n * The GLOBAL VARIABLES\n * Several sys schema views including metrics or equivalent (depending on version and settings)\n * Queries in the 95th percentile\n * Several ndbinfo views for MySQL Cluster\n * Replication (both master and slave) information.\n \n Some of the sys schema views are calculated as initial (optional), overall, delta:\n \n * The initial view is the content of the view at the start of this procedure.\n This output will be the same as the the start values used for the delta view.\n The initial view is included if @sys.diagnostics.include_raw = 'ON'.\n * The overall view is the content of the view at the end of this procedure.\n This output is the same as the end values used for the delta view.\n The overall view is always included.\n * The delta view is the difference from the beginning to the end. Note that for min and max values\n they are simply the min or max value from the end view respectively, so does not necessarily reflect\n the minimum/maximum value in the monitored period.\n Note: except for the metrics views the delta is only calculation between the first and last outputs.\n \n Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\n \n Versions supported:\n * MySQL 5.6: 5.6.10 and later\n * MySQL 5.7: 5.7.9 and later\n \n Parameters\n \n in_max_runtime (INT UNSIGNED):\n The maximum time to keep collecting data.\n Use NULL to get the default which is 60 seconds, otherwise enter a value greater than 0.\n in_interval (INT UNSIGNED):\n How long to sleep between data collections.\n Use NULL to get the default which is 30 seconds, otherwise enter a value greater than 0.\n in_auto_config (ENUM('current', 'medium', 'full'))\n Automatically enable Performance Schema instruments and consumers.\n NOTE: The more that are enabled, the more impact on the performance.\n Supported values are:\n * current - use the current settings.\n * medium - enable some settings. This requires the SUPER privilege.\n * full - enables all settings. This will have a big impact on the\n performance - be careful using this option. This requires\n the SUPER privilege.\n If another setting the 'current' is chosen, the current settings\n are restored at the end of the procedure.\n \n \n Configuration Options\n \n sys.diagnostics.allow_i_s_tables\n Specifies whether it is allowed to do table scan queries on information_schema.TABLES. This can be expensive if there\n are many tables. Set to 'ON' to allow, 'OFF' to not allow.\n Default is 'OFF'.\n \n sys.diagnostics.include_raw\n Set to 'ON' to include the raw data (e.g. the original output of \"SELECT * FROM sys.metrics\").\n Use this to get the initial values of the various views.\n Default is 'OFF'.\n \n sys.statement_truncate_len\n How much of queries in the process list output to include.\n Default is 64.\n \n sys.debug\n Whether to provide debugging output.\n Default is 'OFF'. Set to 'ON' to include.\n \n \n Example\n \n To create a report and append it to the file diag.out:\n \n mysql> TEE diag.out;\n mysql> CALL sys.diagnostics(120, 30, 'current');\n ...\n mysql> NOTEE;\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"execute_prepared_stmt","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Takes the query in the argument and executes it using a prepared statement. The prepared statement is deallocated,\n so the procedure is mainly useful for executing one off dynamically created queries.\n \n The sys_execute_prepared_stmt prepared statement name is used for the query and is required not to exist.\n \n \n Parameters\n \n in_query (longtext CHARACTER SET UTF8):\n The query to execute.\n \n \n Configuration Options\n \n sys.debug\n Whether to provide debugging output.\n Default is 'OFF'. Set to 'ON' to include.\n \n \n Example\n \n mysql> CALL sys.execute_prepared_stmt('SELECT * FROM sys.sys_config');\n +------------------------+-------+---------------------+--------+\n | variable               | value | set_time            | set_by |\n +------------------------+-------+---------------------+--------+\n | statement_truncate_len | 64    | 2015-06-30 13:06:00 | NULL   |\n +------------------------+-------+---------------------+--------+\n 1 row in set (0.00 sec)\n \n Query OK, 0 rows affected (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_disable_background_threads","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Disable all background thread instrumentation within Performance Schema.\n \n Parameters\n \n None.\n \n Example\n \n mysql> CALL sys.ps_setup_disable_background_threads();\n +--------------------------------+\n | summary                        |\n +--------------------------------+\n | Disabled 18 background threads |\n +--------------------------------+\n 1 row in set (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_disable_consumer","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Disables consumers within Performance Schema \n matching the input pattern.\n \n Parameters\n \n consumer (VARCHAR(128)):\n A LIKE pattern match (using \"%consumer%\") of consumers to disable\n \n Example\n \n To disable all consumers:\n \n mysql> CALL sys.ps_setup_disable_consumer('');\n +--------------------------+\n | summary                  |\n +--------------------------+\n | Disabled 15 consumers    |\n +--------------------------+\n 1 row in set (0.02 sec)\n \n To disable just the event_stage consumers:\n \n mysql> CALL sys.ps_setup_disable_comsumers('stage');\n +------------------------+\n | summary                |\n +------------------------+\n | Disabled 3 consumers   |\n +------------------------+\n 1 row in set (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_disable_instrument","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Disables instruments within Performance Schema \n matching the input pattern.\n \n Parameters\n \n in_pattern (VARCHAR(128)):\n A LIKE pattern match (using \"%in_pattern%\") of events to disable\n \n Example\n \n To disable all mutex instruments:\n \n mysql> CALL sys.ps_setup_disable_instrument('wait/synch/mutex');\n +--------------------------+\n | summary                  |\n +--------------------------+\n | Disabled 155 instruments |\n +--------------------------+\n 1 row in set (0.02 sec)\n \n To disable just a the scpecific TCP/IP based network IO instrument:\n \n mysql> CALL sys.ps_setup_disable_instrument('wait/io/socket/sql/server_tcpip_socket');\n +------------------------+\n | summary                |\n +------------------------+\n | Disabled 1 instruments |\n +------------------------+\n 1 row in set (0.00 sec)\n \n To enable all instruments:\n \n mysql> CALL sys.ps_setup_disable_instrument('');\n +--------------------------+\n | summary                  |\n +--------------------------+\n | Disabled 547 instruments |\n +--------------------------+\n 1 row in set (0.01 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_disable_thread","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Disable the given connection/thread in Performance Schema.\n \n Parameters\n \n in_connection_id (BIGINT):\n The connection ID (PROCESSLIST_ID from performance_schema.threads\n or the ID shown within SHOW PROCESSLIST)\n \n Example\n \n mysql> CALL sys.ps_setup_disable_thread(3);\n +-------------------+\n | summary           |\n +-------------------+\n | Disabled 1 thread |\n +-------------------+\n 1 row in set (0.01 sec)\n \n To disable the current connection:\n \n mysql> CALL sys.ps_setup_disable_thread(CONNECTION_ID());\n +-------------------+\n | summary           |\n +-------------------+\n | Disabled 1 thread |\n +-------------------+\n 1 row in set (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_enable_background_threads","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Enable all background thread instrumentation within Performance Schema.\n \n Parameters\n \n None.\n \n Example\n \n mysql> CALL sys.ps_setup_enable_background_threads();\n +-------------------------------+\n | summary                       |\n +-------------------------------+\n | Enabled 18 background threads |\n +-------------------------------+\n 1 row in set (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_enable_consumer","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Enables consumers within Performance Schema \n matching the input pattern.\n \n Parameters\n \n consumer (VARCHAR(128)):\n A LIKE pattern match (using \"%consumer%\") of consumers to enable\n \n Example\n \n To enable all consumers:\n \n mysql> CALL sys.ps_setup_enable_consumer('');\n +-------------------------+\n | summary                 |\n +-------------------------+\n | Enabled 10 consumers    |\n +-------------------------+\n 1 row in set (0.02 sec)\n \n Query OK, 0 rows affected (0.02 sec)\n \n To enable just \"waits\" consumers:\n \n mysql> CALL sys.ps_setup_enable_consumer('waits');\n +-----------------------+\n | summary               |\n +-----------------------+\n | Enabled 3 consumers   |\n +-----------------------+\n 1 row in set (0.00 sec)\n \n Query OK, 0 rows affected (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_enable_instrument","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Enables instruments within Performance Schema \n matching the input pattern.\n \n Parameters\n \n in_pattern (VARCHAR(128)):\n A LIKE pattern match (using \"%in_pattern%\") of events to enable\n \n Example\n \n To enable all mutex instruments:\n \n mysql> CALL sys.ps_setup_enable_instrument('wait/synch/mutex');\n +-------------------------+\n | summary                 |\n +-------------------------+\n | Enabled 155 instruments |\n +-------------------------+\n 1 row in set (0.02 sec)\n \n Query OK, 0 rows affected (0.02 sec)\n \n To enable just a the scpecific TCP/IP based network IO instrument:\n \n mysql> CALL sys.ps_setup_enable_instrument('wait/io/socket/sql/server_tcpip_socket');\n +-----------------------+\n | summary               |\n +-----------------------+\n | Enabled 1 instruments |\n +-----------------------+\n 1 row in set (0.00 sec)\n \n Query OK, 0 rows affected (0.00 sec)\n \n To enable all instruments:\n \n mysql> CALL sys.ps_setup_enable_instrument('');\n +-------------------------+\n | summary                 |\n +-------------------------+\n | Enabled 547 instruments |\n +-------------------------+\n 1 row in set (0.01 sec)\n \n Query OK, 0 rows affected (0.01 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_enable_thread","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Enable the given connection/thread in Performance Schema.\n \n Parameters\n \n in_connection_id (BIGINT):\n The connection ID (PROCESSLIST_ID from performance_schema.threads\n or the ID shown within SHOW PROCESSLIST)\n \n Example\n \n mysql> CALL sys.ps_setup_enable_thread(3);\n +------------------+\n | summary          |\n +------------------+\n | Enabled 1 thread |\n +------------------+\n 1 row in set (0.01 sec)\n \n To enable the current connection:\n \n mysql> CALL sys.ps_setup_enable_thread(CONNECTION_ID());\n +------------------+\n | summary          |\n +------------------+\n | Enabled 1 thread |\n +------------------+\n 1 row in set (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_reload_saved","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Reloads a saved Performance Schema configuration,\n so that you can alter the setup for debugging purposes, \n but restore it to a previous state.\n \n Use the companion procedure - ps_setup_save(), to \n save a configuration.\n \n Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\n \n Parameters\n \n None.\n \n Example\n \n mysql> CALL sys.ps_setup_save();\n Query OK, 0 rows affected (0.08 sec)\n \n mysql> UPDATE performance_schema.setup_instruments SET enabled = 'YES', timed = 'YES';\n Query OK, 547 rows affected (0.40 sec)\n Rows matched: 784  Changed: 547  Warnings: 0\n \n /* Run some tests that need more detailed instrumentation here */\n \n mysql> CALL sys.ps_setup_reload_saved();\n Query OK, 0 rows affected (0.32 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_reset_to_default","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Resets the Performance Schema setup to the default settings.\n \n Parameters\n \n in_verbose (BOOLEAN):\n Whether to print each setup stage (including the SQL) whilst running.\n \n Example\n \n mysql> CALL sys.ps_setup_reset_to_default(true)\\G\n *************************** 1. row ***************************\n status: Resetting: setup_actors\n DELETE\n FROM performance_schema.setup_actors\n WHERE NOT (HOST = '%' AND USER = '%' AND ROLE = '%')\n 1 row in set (0.00 sec)\n \n *************************** 1. row ***************************\n status: Resetting: setup_actors\n INSERT IGNORE INTO performance_schema.setup_actors\n VALUES ('%', '%', '%')\n 1 row in set (0.00 sec)\n ...\n \n mysql> CALL sys.ps_setup_reset_to_default(false)G\n Query OK, 0 rows affected (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_save","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Saves the current configuration of Performance Schema, \n so that you can alter the setup for debugging purposes, \n but restore it to a previous state.\n \n Use the companion procedure - ps_setup_reload_saved(), to \n restore the saved config.\n \n Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\n \n Parameters\n \n None.\n \n Example\n \n mysql> CALL sys.ps_setup_save();\n Query OK, 0 rows affected (0.08 sec)\n \n mysql> UPDATE performance_schema.setup_instruments \n ->    SET enabled = 'YES', timed = 'YES';\n Query OK, 547 rows affected (0.40 sec)\n Rows matched: 784  Changed: 547  Warnings: 0\n \n /* Run some tests that need more detailed instrumentation here */\n \n mysql> CALL sys.ps_setup_reload_saved();\n Query OK, 0 rows affected (0.32 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_show_disabled","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Shows all currently disable Performance Schema configuration.\n \n Parameters\n \n in_in_show_instruments (BOOLEAN):\n Whether to print disabled instruments (can print many items)\n \n in_in_show_threads (BOOLEAN):\n Whether to print disabled threads\n \n Example\n \n mysql> CALL sys.ps_setup_show_disabled(TRUE, TRUE);\n +----------------------------+\n | performance_schema_enabled |\n +----------------------------+\n |                          1 |\n +----------------------------+\n 1 row in set (0.00 sec)\n \n +--------------------+\n | enabled_users      |\n +--------------------+\n | 'mark'@'localhost' |\n +--------------------+\n 1 row in set (0.00 sec)\n \n +-------------+----------------------+---------+-------+\n | object_type | objects              | enabled | timed |\n +-------------+----------------------+---------+-------+\n | EVENT       | mysql.%              | NO      | NO    |\n | EVENT       | performance_schema.% | NO      | NO    |\n | EVENT       | information_schema.% | NO      | NO    |\n | FUNCTION    | mysql.%              | NO      | NO    |\n | FUNCTION    | performance_schema.% | NO      | NO    |\n | FUNCTION    | information_schema.% | NO      | NO    |\n | PROCEDURE   | mysql.%              | NO      | NO    |\n | PROCEDURE   | performance_schema.% | NO      | NO    |\n | PROCEDURE   | information_schema.% | NO      | NO    |\n | TABLE       | mysql.%              | NO      | NO    |\n | TABLE       | performance_schema.% | NO      | NO    |\n | TABLE       | information_schema.% | NO      | NO    |\n | TRIGGER     | mysql.%              | NO      | NO    |\n | TRIGGER     | performance_schema.% | NO      | NO    |\n | TRIGGER     | information_schema.% | NO      | NO    |\n +-------------+----------------------+---------+-------+\n 15 rows in set (0.00 sec)\n \n +----------------------------------+\n | disabled_consumers               |\n +----------------------------------+\n | events_stages_current            |\n | events_stages_history            |\n | events_stages_history_long       |\n | events_statements_history        |\n | events_statements_history_long   |\n | events_transactions_history      |\n | events_transactions_history_long |\n | events_waits_current             |\n | events_waits_history             |\n | events_waits_history_long        |\n +----------------------------------+\n 10 rows in set (0.00 sec)\n \n Empty set (0.00 sec)\n \n +---------------------------------------------------------------------------------------+-------+\n | disabled_instruments                                                                  | timed |\n +---------------------------------------------------------------------------------------+-------+\n | wait/synch/mutex/sql/TC_LOG_MMAP::LOCK_tc                                             | NO    |\n | wait/synch/mutex/sql/LOCK_des_key_file                                                | NO    |\n | wait/synch/mutex/sql/MYSQL_BIN_LOG::LOCK_commit                                       | NO    |\n ...\n | memory/sql/servers_cache                                                              | NO    |\n | memory/sql/udf_mem                                                                    | NO    |\n | wait/lock/metadata/sql/mdl                                                            | NO    |\n +---------------------------------------------------------------------------------------+-------+\n 547 rows in set (0.00 sec)\n \n Query OK, 0 rows affected (0.01 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_show_disabled_consumers","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Shows all currently disabled consumers.\n \n Parameters\n \n None\n \n Example\n \n mysql> CALL sys.ps_setup_show_disabled_consumers();\n \n +---------------------------+\n | disabled_consumers        |\n +---------------------------+\n | events_statements_current |\n | global_instrumentation    |\n | thread_instrumentation    |\n | statements_digest         |\n +---------------------------+\n 4 rows in set (0.05 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_show_disabled_instruments","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Shows all currently disabled instruments.\n \n Parameters\n \n None\n \n Example\n \n mysql> CALL sys.ps_setup_show_disabled_instruments();\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_show_enabled","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Shows all currently enabled Performance Schema configuration.\n \n Parameters\n \n in_show_instruments (BOOLEAN):\n Whether to print enabled instruments (can print many items)\n \n in_show_threads (BOOLEAN):\n Whether to print enabled threads\n \n Example\n \n mysql> CALL sys.ps_setup_show_enabled(TRUE, TRUE);\n +----------------------------+\n | performance_schema_enabled |\n +----------------------------+\n |                          1 |\n +----------------------------+\n 1 row in set (0.00 sec)\n \n +---------------+\n | enabled_users |\n +---------------+\n | '%'@'%'       |\n +---------------+\n 1 row in set (0.01 sec)\n \n +----------------------+---------+-------+\n | objects              | enabled | timed |\n +----------------------+---------+-------+\n | mysql.%              | NO      | NO    |\n | performance_schema.% | NO      | NO    |\n | information_schema.% | NO      | NO    |\n | %.%                  | YES     | YES   |\n +----------------------+---------+-------+\n 4 rows in set (0.01 sec)\n \n +---------------------------+\n | enabled_consumers         |\n +---------------------------+\n | events_statements_current |\n | global_instrumentation    |\n | thread_instrumentation    |\n | statements_digest         |\n +---------------------------+\n 4 rows in set (0.05 sec)\n \n +--------------------------+-------------+\n | enabled_threads          | thread_type |\n +--------------------------+-------------+\n | innodb/srv_master_thread | BACKGROUND  |\n | root@localhost           | FOREGROUND  |\n | root@localhost           | FOREGROUND  |\n | root@localhost           | FOREGROUND  |\n | root@localhost           | FOREGROUND  |\n +--------------------------+-------------+\n 5 rows in set (0.03 sec)\n \n +-------------------------------------+-------+\n | enabled_instruments                 | timed |\n +-------------------------------------+-------+\n | wait/io/file/sql/map                | YES   |\n | wait/io/file/sql/binlog             | YES   |\n ...\n | statement/com/Error                 | YES   |\n | statement/com/                      | YES   |\n | idle                                | YES   |\n +-------------------------------------+-------+\n 210 rows in set (0.08 sec)\n \n Query OK, 0 rows affected (0.89 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_show_enabled_consumers","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Shows all currently enabled consumers.\n \n Parameters\n \n None\n \n Example\n \n mysql> CALL sys.ps_setup_show_enabled_consumers();\n \n +---------------------------+\n | enabled_consumers         |\n +---------------------------+\n | events_statements_current |\n | global_instrumentation    |\n | thread_instrumentation    |\n | statements_digest         |\n +---------------------------+\n 4 rows in set (0.05 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_setup_show_enabled_instruments","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Shows all currently enabled instruments.\n \n Parameters\n \n None\n \n Example\n \n mysql> CALL sys.ps_setup_show_enabled_instruments();\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_statement_avg_latency_histogram","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Outputs a textual histogram graph of the average latency values\n across all normalized queries tracked within the Performance Schema\n events_statements_summary_by_digest table.\n \n Can be used to show a very high level picture of what kind of \n latency distribution statements running within this instance have.\n \n Parameters\n \n None.\n \n Example\n \n mysql> CALL sys.ps_statement_avg_latency_histogram()G\n *************************** 1. row ***************************\n Performance Schema Statement Digest Average Latency Histogram:\n \n . = 1 unit\n * = 2 units\n # = 3 units\n \n (0 - 38ms)     240 | ################################################################################\n (38 - 77ms)    38  | ......................................\n (77 - 115ms)   3   | ...\n (115 - 154ms)  62  | *******************************\n (154 - 192ms)  3   | ...\n (192 - 231ms)  0   |\n (231 - 269ms)  0   |\n (269 - 307ms)  0   |\n (307 - 346ms)  0   |\n (346 - 384ms)  1   | .\n (384 - 423ms)  1   | .\n (423 - 461ms)  0   |\n (461 - 499ms)  0   |\n (499 - 538ms)  0   |\n (538 - 576ms)  0   |\n (576 - 615ms)  1   | .\n \n Total Statements: 350; Buckets: 16; Bucket Size: 38 ms;\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_trace_statement_digest","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Traces all instrumentation within Performance Schema for a specific\n Statement Digest. \n \n When finding a statement of interest within the \n performance_schema.events_statements_summary_by_digest table, feed\n the DIGEST MD5 value in to this procedure, set how long to poll for, \n and at what interval to poll, and it will generate a report of all \n statistics tracked within Performance Schema for that digest for the\n interval.\n \n It will also attempt to generate an EXPLAIN for the longest running \n example of the digest during the interval. Note this may fail, as\n Performance Schema truncates long SQL_TEXT values (and hence the \n EXPLAIN will fail due to parse errors).\n \n Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\n \n Parameters\n \n in_digest (VARCHAR(32)):\n The statement digest identifier you would like to analyze\n in_runtime (INT):\n The number of seconds to run analysis for (defaults to a minute)\n in_interval (DECIMAL(2,2)):\n The interval (in seconds, may be fractional) at which to try\n and take snapshots (defaults to a second)\n in_start_fresh (BOOLEAN):\n Whether to TRUNCATE the events_statements_history_long and\n events_stages_history_long tables before starting (default false)\n in_auto_enable (BOOLEAN):\n Whether to automatically turn on required consumers (default false)\n \n Example\n \n mysql> call ps_trace_statement_digest('891ec6860f98ba46d89dd20b0c03652c', 10, 0.1, true, true);\n +--------------------+\n | SUMMARY STATISTICS |\n +--------------------+\n | SUMMARY STATISTICS |\n +--------------------+\n 1 row in set (9.11 sec)\n \n +------------+-----------+-----------+-----------+---------------+------------+------------+\n | executions | exec_time | lock_time | rows_sent | rows_examined | tmp_tables | full_scans |\n +------------+-----------+-----------+-----------+---------------+------------+------------+\n |         21 | 4.11 ms   | 2.00 ms   |         0 |            21 |          0 |          0 |\n +------------+-----------+-----------+-----------+---------------+------------+------------+\n 1 row in set (9.11 sec)\n \n +------------------------------------------+-------+-----------+\n | event_name                               | count | latency   |\n +------------------------------------------+-------+-----------+\n | stage/sql/checking query cache for query |    16 | 724.37 us |\n | stage/sql/statistics                     |    16 | 546.92 us |\n | stage/sql/freeing items                  |    18 | 520.11 us |\n | stage/sql/init                           |    51 | 466.80 us |\n ...\n | stage/sql/cleaning up                    |    18 | 11.92 us  |\n | stage/sql/executing                      |    16 | 6.95 us   |\n +------------------------------------------+-------+-----------+\n 17 rows in set (9.12 sec)\n \n +---------------------------+\n | LONGEST RUNNING STATEMENT |\n +---------------------------+\n | LONGEST RUNNING STATEMENT |\n +---------------------------+\n 1 row in set (9.16 sec)\n \n +-----------+-----------+-----------+-----------+---------------+------------+-----------+\n | thread_id | exec_time | lock_time | rows_sent | rows_examined | tmp_tables | full_scan |\n +-----------+-----------+-----------+-----------+---------------+------------+-----------+\n |    166646 | 618.43 us | 1.00 ms   |         0 |             1 |          0 |         0 |\n +-----------+-----------+-----------+-----------+---------------+------------+-----------+\n 1 row in set (9.16 sec)\n \n // Truncated for clarity...\n +-----------------------------------------------------------------+\n | sql_text                                                        |\n +-----------------------------------------------------------------+\n | select hibeventhe0_.id as id1382_, hibeventhe0_.createdTime ... |\n +-----------------------------------------------------------------+\n 1 row in set (9.17 sec)\n \n +------------------------------------------+-----------+\n | event_name                               | latency   |\n +------------------------------------------+-----------+\n | stage/sql/init                           | 8.61 us   |\n | stage/sql/Waiting for query cache lock   | 453.23 us |\n | stage/sql/init                           | 331.07 ns |\n | stage/sql/checking query cache for query | 43.04 us  |\n ...\n | stage/sql/freeing items                  | 30.46 us  |\n | stage/sql/cleaning up                    | 662.13 ns |\n +------------------------------------------+-----------+\n 18 rows in set (9.23 sec)\n \n +----+-------------+--------------+-------+---------------+-----------+---------+-------------+------+-------+\n | id | select_type | table        | type  | possible_keys | key       | key_len | ref         | rows | Extra |\n +----+-------------+--------------+-------+---------------+-----------+---------+-------------+------+-------+\n |  1 | SIMPLE      | hibeventhe0_ | const | fixedTime     | fixedTime | 775     | const,const |    1 | NULL  |\n +----+-------------+--------------+-------+---------------+-----------+---------+-------------+------+-------+\n 1 row in set (9.27 sec)\n \n Query OK, 0 rows affected (9.28 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_trace_thread","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Dumps all data within Performance Schema for an instrumented thread,\n to create a DOT formatted graph file. \n \n Each resultset returned from the procedure should be used for a complete graph\n \n Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\n \n Parameters\n \n in_thread_id (BIGINT UNSIGNED):\n The thread that you would like a stack trace for\n in_outfile  (VARCHAR(255)):\n The filename the dot file will be written to\n in_max_runtime (DECIMAL(20,2)):\n The maximum time to keep collecting data.\n Use NULL to get the default which is 60 seconds.\n in_interval (DECIMAL(20,2)): \n How long to sleep between data collections. \n Use NULL to get the default which is 1 second.\n in_start_fresh (BOOLEAN):\n Whether to reset all Performance Schema data before tracing.\n in_auto_setup (BOOLEAN):\n Whether to disable all other threads and enable all consumers/instruments. \n This will also reset the settings at the end of the run.\n in_debug (BOOLEAN):\n Whether you would like to include file:lineno in the graph\n \n Example\n \n mysql> CALL sys.ps_trace_thread(25, CONCAT('/tmp/stack-', REPLACE(NOW(), ' ', '-'), '.dot'), NULL, NULL, TRUE, TRUE, TRUE);\n +-------------------+\n | summary           |\n +-------------------+\n | Disabled 1 thread |\n +-------------------+\n 1 row in set (0.00 sec)\n \n +---------------------------------------------+\n | Info                                        |\n +---------------------------------------------+\n | Data collection starting for THREAD_ID = 25 |\n +---------------------------------------------+\n 1 row in set (0.03 sec)\n \n +-----------------------------------------------------------+\n | Info                                                      |\n +-----------------------------------------------------------+\n | Stack trace written to /tmp/stack-2014-02-16-21:18:41.dot |\n +-----------------------------------------------------------+\n 1 row in set (60.07 sec)\n \n +-------------------------------------------------------------------+\n | Convert to PDF                                                    |\n +-------------------------------------------------------------------+\n | dot -Tpdf -o /tmp/stack_25.pdf /tmp/stack-2014-02-16-21:18:41.dot |\n +-------------------------------------------------------------------+\n 1 row in set (60.07 sec)\n \n +-------------------------------------------------------------------+\n | Convert to PNG                                                    |\n +-------------------------------------------------------------------+\n | dot -Tpng -o /tmp/stack_25.png /tmp/stack-2014-02-16-21:18:41.dot |\n +-------------------------------------------------------------------+\n 1 row in set (60.07 sec)\n \n +------------------+\n | summary          |\n +------------------+\n | Enabled 1 thread |\n +------------------+\n 1 row in set (60.32 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"ps_truncate_all_tables","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Truncates all summary tables within Performance Schema, \n resetting all aggregated instrumentation as a snapshot.\n \n Parameters\n \n in_verbose (BOOLEAN):\n Whether to print each TRUNCATE statement before running\n \n Example\n \n mysql> CALL sys.ps_truncate_all_tables(false);\n +---------------------+\n | summary             |\n +---------------------+\n | Truncated 44 tables |\n +---------------------+\n 1 row in set (0.10 sec)\n \n Query OK, 0 rows affected (0.10 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"statement_performance_analyzer","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Create a report of the statements running on the server.\n \n The views are calculated based on the overall and/or delta activity.\n \n Requires the SUPER privilege for \"SET sql_log_bin = 0;\".\n \n Parameters\n \n in_action (ENUM('snapshot', 'overall', 'delta', 'create_tmp', 'create_table', 'save', 'cleanup')):\n The action to take. Supported actions are:\n * snapshot      Store a snapshot. The default is to make a snapshot of the current content of\n performance_schema.events_statements_summary_by_digest, but by setting in_table\n this can be overwritten to copy the content of the specified table.\n The snapshot is stored in the sys.tmp_digests temporary table.\n * overall       Generate analyzis based on the content specified by in_table. For the overall analyzis,\n in_table can be NOW() to use a fresh snapshot. This will overwrite an existing snapshot.\n Use NULL for in_table to use the existing snapshot. If in_table IS NULL and no snapshot\n exists, a new will be created.\n See also in_views and @sys.statement_performance_analyzer.limit.\n * delta         Generate a delta analysis. The delta will be calculated between the reference table in\n in_table and the snapshot. An existing snapshot must exist.\n The action uses the sys.tmp_digests_delta temporary table.\n See also in_views and @sys.statement_performance_analyzer.limit.\n * create_table  Create a regular table suitable for storing the snapshot for later use, e.g. for\n calculating deltas.\n * create_tmp    Create a temporary table suitable for storing the snapshot for later use, e.g. for\n calculating deltas.\n * save          Save the snapshot in the table specified by in_table. The table must exists and have\n the correct structure.\n If no snapshot exists, a new is created.\n * cleanup       Remove the temporary tables used for the snapshot and delta.\n \n in_table (VARCHAR(129)):\n The table argument used for some actions. Use the format 'db1.t1' or 't1' without using any backticks (`)\n for quoting. Periods (.) are not supported in the database and table names.\n \n The meaning of the table for each action supporting the argument is:\n \n * snapshot      The snapshot is created based on the specified table. Set to NULL or NOW() to use\n the current content of performance_schema.events_statements_summary_by_digest.\n * overall       The table with the content to create the overall analyzis for. The following values\n can be used:\n - A table name - use the content of that table.\n - NOW()        - create a fresh snapshot and overwrite the existing snapshot.\n - NULL         - use the last stored snapshot.\n * delta         The table name is mandatory and specified the reference view to compare the currently\n stored snapshot against. If no snapshot exists, a new will be created.\n * create_table  The name of the regular table to create.\n * create_tmp    The name of the temporary table to create.\n * save          The name of the table to save the currently stored snapshot into.\n \n in_views (SET ('with_runtimes_in_95th_percentile', 'analysis', 'with_errors_or_warnings',\n 'with_full_table_scans', 'with_sorting', 'with_temp_tables', 'custom'))\n Which views to include:  * with_runtimes_in_95th_percentile  Based on the sys.statements_with_runtimes_in_95th_percentile view * analysis                          Based on the sys.statement_analysis view * with_errors_or_warnings           Based on the sys.statements_with_errors_or_warnings view * with_full_table_scans             Based on the sys.statements_with_full_table_scans view * with_sorting                      Based on the sys.statements_with_sorting view * with_temp_tables                  Based on the sys.statements_with_temp_tables view * custom                            Use a custom view. This view must be specified in @sys.statement_performance_analyzer.view to an existing view or a query  Default is to include all except 'custom'.   Configuration Options  sys.statement_performance_analyzer.limit The maximum number of rows to include for the views that does not have a built-in limit (e.g. the 95th percentile view). If not set the limit is 100.  sys.statement_performance_analyzer.view Used together with the 'custom' view. If the value contains a space, it is considered a query, otherwise it must be an existing view querying the performance_schema.events_statements_summary_by_digest table. There cannot be any limit clause including in the query or view definition if @sys.statement_performance_analyzer.limit > 0. If specifying a view, use the same format as for in_table.  sys.debug Whether to provide debugging output. Default is 'OFF'. Set to 'ON' to include.   Example  To create a report with the queries in the 95th percentile since last truncate of performance_schema.events_statements_summary_by_digest and the delta for a 1 minute period:  1. Create a temporary table to store the initial snapshot. 2. Create the initial snapshot. 3. Save the initial snapshot in the temporary table. 4. Wait one minute. 5. Create a new snapshot. 6. Perform analyzis based on the new snapshot. 7. Perform analyzis based on the delta between the initial and new snapshots.  mysql> CALL sys.statement_performance_analyzer('create_tmp', 'mydb.tmp_digests_ini', NULL); Query OK, 0 rows affected (0.08 sec)  mysql> CALL sys.statement_performance_analyzer('snapshot', NULL, NULL); Query OK, 0 rows affected (0.02 sec)  mysql> CALL sys.statement_performance_analyzer('save', 'mydb.tmp_digests_ini', NULL); Query OK, 0 rows affected (0.00 sec)  mysql> DO SLEEP(60); Query OK, 0 rows affected (1 min 0.00 sec)  mysql> CALL sys.statement_performance_analyzer('snapshot', NULL, NULL); Query OK, 0 rows affected (0.02 sec)  mysql> CALL sys.statement_performance_analyzer('overall', NULL, 'with_runtimes_in_95th_percentile'); +-----------------------------------------+ | Next Output                             | +-----------------------------------------+ | Queries with Runtime in 95th Percentile | +-----------------------------------------+ 1 row in set (0.05 sec)  ...  mysql> CALL sys.statement_performance_analyzer('delta', 'mydb.tmp_digests_ini', 'with_runtimes_in_95th_percentile'); +-----------------------------------------+ | Next Output                             | +-----------------------------------------+ | Queries with Runtime in 95th Percentile | +-----------------------------------------+ 1 row in set (0.03 sec)  ...   To create an overall report of the 95th percentile queries and the top 10 queries with full table scans:  mysql> CALL sys.statement_performance_analyzer('snapshot', NULL, NULL); Query OK, 0 rows affected (0.01 sec)                                     mysql> SET @sys.statement_performance_analyzer.limit = 10; Query OK, 0 rows affected (0.00 sec)            mysql> CALL sys.statement_performance_analyzer('overall', NULL, 'with_runtimes_in_95th_percentile,with_full_table_scans'); +-----------------------------------------+ | Next Output                             | +-----------------------------------------+ | Queries with Runtime in 95th Percentile | +-----------------------------------------+ 1 row in set (0.01 sec)  ...  +-------------------------------------+ | Next Output                         | +-------------------------------------+ | Top 10 Queries with Full Table Scan | +-------------------------------------+ 1 row in set (0.09 sec)  ...   Use a custom view showing the top 10 query sorted by total execution time refreshing the view every minute using the watch command in Linux.  mysql> CREATE OR REPLACE VIEW mydb.my_statements AS -> SELECT sys.format_statement(DIGEST_TEXT) AS query, ->        SCHEMA_NAME AS db, ->        COUNT_STAR AS exec_count, ->        sys.format_time(SUM_TIMER_WAIT) AS total_latency, ->        sys.format_time(AVG_TIMER_WAIT) AS avg_latency, ->        ROUND(IFNULL(SUM_ROWS_SENT / NULLIF(COUNT_STAR, 0), 0)) AS rows_sent_avg, ->        ROUND(IFNULL(SUM_ROWS_EXAMINED / NULLIF(COUNT_STAR, 0), 0)) AS rows_examined_avg, ->        ROUND(IFNULL(SUM_ROWS_AFFECTED / NULLIF(COUNT_STAR, 0), 0)) AS rows_affected_avg, ->        DIGEST AS digest ->   FROM performance_schema.events_statements_summary_by_digest -> ORDER BY SUM_TIMER_WAIT DESC; Query OK, 0 rows affected (0.01 sec)  mysql> CALL sys.statement_performance_analyzer('create_table', 'mydb.digests_prev', NULL); Query OK, 0 rows affected (0.10 sec)  shell$ watch -n 60 \"mysql sys --table -e \" > SET @sys.statement_performance_analyzer.view = 'mydb.my_statements'; > SET @sys.statement_performance_analyzer.limit = 10; > CALL statement_performance_analyzer('snapshot', NULL, NULL); > CALL statement_performance_analyzer('delta', 'mydb.digests_prev', 'custom'); > CALL statement_performance_analyzer('save', 'mydb.digests_prev', NULL); > \"\"  Every 60.0s: mysql sys --table -e \"                                                                                                   ...  Mon Dec 22 10:58:51 2014  +----------------------------------+ | Next Output                      | +----------------------------------+ | Top 10 Queries Using Custom View | +----------------------------------+ +-------------------+-------+------------+---------------+-------------+---------------+-------------------+-------------------+----------------------------------+ | query             | db    | exec_count | total_latency | avg_latency | rows_sent_avg | rows_examined_avg | rows_affected_avg | digest                           | +-------------------+-------+------------+---------------+-------------+---------------+-------------------+-------------------+----------------------------------+ ... ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"},{"Db":"sys","Name":"table_exists","Type":"PROCEDURE","Definer":"mysql.sys@localhost","Modified":"2016-08-15T21:45:08.000Z","Created":"2016-08-15T21:45:08.000Z","Security_type":"INVOKER","Comment":"\n Description\n \n Tests whether the table specified in in_db and in_table exists either as a regular\n table, or as a temporary table. The returned value corresponds to the table that\n will be used, so if there's both a temporary and a permanent table with the given\n name, then 'TEMPORARY' will be returned.\n \n Parameters\n \n in_db (VARCHAR(64)):\n The database name to check for the existance of the table in.\n \n in_table (VARCHAR(64)):\n The name of the table to check the existance of.\n \n out_exists ENUM('', 'BASE TABLE', 'VIEW', 'TEMPORARY'):\n The return value: whether the table exists. The value is one of:\n * ''           - the table does not exist neither as a base table, view, nor temporary table.\n * 'BASE TABLE' - the table name exists as a permanent base table table.\n * 'VIEW'       - the table name exists as a view.\n * 'TEMPORARY'  - the table name exists as a temporary table.\n \n Example\n \n mysql> CREATE DATABASE db1;\n Query OK, 1 row affected (0.07 sec)\n \n mysql> use db1;\n Database changed\n mysql> CREATE TABLE t1 (id INT PRIMARY KEY);\n Query OK, 0 rows affected (0.08 sec)\n \n mysql> CREATE TABLE t2 (id INT PRIMARY KEY);\n Query OK, 0 rows affected (0.08 sec)\n \n mysql> CREATE view v_t1 AS SELECT * FROM t1;\n Query OK, 0 rows affected (0.00 sec)\n \n mysql> CREATE TEMPORARY TABLE t1 (id INT PRIMARY KEY);\n Query OK, 0 rows affected (0.00 sec)\n \n mysql> CALL sys.table_exists('db1', 't1', @exists); SELECT @exists;\n Query OK, 0 rows affected (0.00 sec)\n \n +------------+\n | @exists    |\n +------------+\n | TEMPORARY  |\n +------------+\n 1 row in set (0.00 sec)\n \n mysql> CALL sys.table_exists('db1', 't2', @exists); SELECT @exists;\n Query OK, 0 rows affected (0.00 sec)\n \n +------------+\n | @exists    |\n +------------+\n | BASE TABLE |\n +------------+\n 1 row in set (0.01 sec)\n \n mysql> CALL sys.table_exists('db1', 'v_t1', @exists); SELECT @exists;\n Query OK, 0 rows affected (0.00 sec)\n \n +---------+\n | @exists |\n +---------+\n | VIEW    |\n +---------+\n 1 row in set (0.00 sec)\n \n mysql> CALL sys.table_exists('db1', 't3', @exists); SELECT @exists;\n Query OK, 0 rows affected (0.01 sec)\n \n +---------+\n | @exists |\n +---------+\n |         |\n +---------+\n 1 row in set (0.00 sec)\n ","character_set_client":"utf8","collation_connection":"utf8_general_ci","Database Collation":"utf8_general_ci"}]}
(08:29:15.110)[log]: [ 'p_A_djent', 'p_A_folk', 'p_G_djent' ]
(08:34:06.228)[inf]: Initializing server on port 2828.
(08:34:09.629)[log]: in = {"Db":"newTest"}
(08:34:09.631)[log]: out = {"error":"none","data":[{"Db":"newTest","Name":"p_A_djent","Type":"PROCEDURE","Definer":"mlndz@localhost","Modified":"2016-09-16T03:56:01.000Z","Created":"2016-09-16T03:56:01.000Z","Security_type":"DEFINER","Comment":"","character_set_client":"latin1","collation_connection":"latin1_swedish_ci","Database Collation":"latin1_swedish_ci"},{"Db":"newTest","Name":"p_A_folk","Type":"PROCEDURE","Definer":"mlndz@localhost","Modified":"2016-09-16T04:17:45.000Z","Created":"2016-09-16T04:17:45.000Z","Security_type":"DEFINER","Comment":"","character_set_client":"latin1","collation_connection":"latin1_swedish_ci","Database Collation":"latin1_swedish_ci"},{"Db":"newTest","Name":"p_G_djent","Type":"PROCEDURE","Definer":"mlndz@localhost","Modified":"2016-09-16T03:54:31.000Z","Created":"2016-09-16T03:54:31.000Z","Security_type":"DEFINER","Comment":"","character_set_client":"latin1","collation_connection":"latin1_swedish_ci","Database Collation":"latin1_swedish_ci"}]}
(08:34:09.632)[log]: [ 'p_A_djent', 'p_A_folk', 'p_G_djent' ]
(08:47:45.768)[inf]: Initializing server on port 2828.
(08:47:49.615)[log]: in = {"Db":"newTest"}
(08:47:49.616)[log]: out = {"error":"none","data":[{"Db":"newTest","Name":"p_A_djent","Type":"PROCEDURE","Definer":"mlndz@localhost","Modified":"2016-09-16T03:56:01.000Z","Created":"2016-09-16T03:56:01.000Z","Security_type":"DEFINER","Comment":"","character_set_client":"latin1","collation_connection":"latin1_swedish_ci","Database Collation":"latin1_swedish_ci"},{"Db":"newTest","Name":"p_A_folk","Type":"PROCEDURE","Definer":"mlndz@localhost","Modified":"2016-09-16T04:17:45.000Z","Created":"2016-09-16T04:17:45.000Z","Security_type":"DEFINER","Comment":"","character_set_client":"latin1","collation_connection":"latin1_swedish_ci","Database Collation":"latin1_swedish_ci"},{"Db":"newTest","Name":"p_G_djent","Type":"PROCEDURE","Definer":"mlndz@localhost","Modified":"2016-09-16T03:54:31.000Z","Created":"2016-09-16T03:54:31.000Z","Security_type":"DEFINER","Comment":"","character_set_client":"latin1","collation_connection":"latin1_swedish_ci","Database Collation":"latin1_swedish_ci"}]}
(08:47:49.618)[log]: [ 'p_A_djent', 'p_A_folk', 'p_G_djent' ]
(08:47:49.623)[log]: in = {}
(08:47:49.623)[log]: out = {"error":"none","data":[{"Procedure":"p_A_djent","sql_mode":"ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION","Create Procedure":"CREATE DEFINER=`mlndz`@`localhost` PROCEDURE `p_A_djent`(IN p_doesit TEXT,IN p_ofcourseitdoes TEXT)\nBEGIN\n\t\tINSERT INTO newTest.djent VALUES (p_doesit , p_ofcourseitdoes) ;\n\tEND","character_set_client":"latin1","collation_connection":"latin1_swedish_ci","Database Collation":"latin1_swedish_ci"}]}
(08:47:49.623)[log]: [{"Procedure":"p_A_djent","sql_mode":"ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION","Create Procedure":"CREATE DEFINER=`mlndz`@`localhost` PROCEDURE `p_A_djent`(IN p_doesit TEXT,IN p_ofcourseitdoes TEXT)\nBEGIN\n\t\tINSERT INTO newTest.djent VALUES (p_doesit , p_ofcourseitdoes) ;\n\tEND","character_set_client":"latin1","collation_connection":"latin1_swedish_ci","Database Collation":"latin1_swedish_ci"}]
(08:47:49.625)[log]: in = {}
(08:47:49.626)[log]: out = {"error":"none","data":[{"Procedure":"p_A_folk","sql_mode":"ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION","Create Procedure":"CREATE DEFINER=`mlndz`@`localhost` PROCEDURE `p_A_folk`(IN p_rate INT,IN p_spec DECIMAL, p_peace BOOL)\nBEGIN\n\t\tINSERT INTO newTest.folk VALUES (p_rate , p_spec, p_peace) ;\n\tEND","character_set_client":"latin1","collation_connection":"latin1_swedish_ci","Database Collation":"latin1_swedish_ci"}]}
(08:47:49.626)[log]: [{"Procedure":"p_A_folk","sql_mode":"ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION","Create Procedure":"CREATE DEFINER=`mlndz`@`localhost` PROCEDURE `p_A_folk`(IN p_rate INT,IN p_spec DECIMAL, p_peace BOOL)\nBEGIN\n\t\tINSERT INTO newTest.folk VALUES (p_rate , p_spec, p_peace) ;\n\tEND","character_set_client":"latin1","collation_connection":"latin1_swedish_ci","Database Collation":"latin1_swedish_ci"}]
(08:47:49.626)[log]: in = {}
(08:47:49.626)[log]: out = {"error":"none","data":[{"Procedure":"p_G_djent","sql_mode":"ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION","Create Procedure":"CREATE DEFINER=`mlndz`@`localhost` PROCEDURE `p_G_djent`(IN p_doesit TEXT,IN p_ofcourseitdoes TEXT)\nBEGIN\n\t\tSELECT * FROM newTest.djent WHERE doesit = p_doesit AND ofcourseitdoes = p_ofcourseitdoes ;\n\tEND","character_set_client":"latin1","collation_connection":"latin1_swedish_ci","Database Collation":"latin1_swedish_ci"}]}
(08:47:49.626)[log]: [{"Procedure":"p_G_djent","sql_mode":"ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_AUTO_CREATE_USER,NO_ENGINE_SUBSTITUTION","Create Procedure":"CREATE DEFINER=`mlndz`@`localhost` PROCEDURE `p_G_djent`(IN p_doesit TEXT,IN p_ofcourseitdoes TEXT)\nBEGIN\n\t\tSELECT * FROM newTest.djent WHERE doesit = p_doesit AND ofcourseitdoes = p_ofcourseitdoes ;\n\tEND","character_set_client":"latin1","collation_connection":"latin1_swedish_ci","Database Collation":"latin1_swedish_ci"}]
(08:57:03.816)[inf]: Initializing server on port 2828.
(08:57:38.562)[inf]: Initializing server on port 2828.
